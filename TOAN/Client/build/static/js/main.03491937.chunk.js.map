{"version":3,"sources":["redux/layout/constants.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/areaInfo/reducers.js","redux/currentRoom/reducers.js","redux/roomData/reducers.js","redux/roomList/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/areaInfo/saga.js","redux/currentRoom/saga.js","redux/roomData/saga.js","redux/roomList/saga.js","redux/sagas.js","redux/store.js","index.js","redux/appMenu/constants.js","redux/areaInfo/constants.js","redux/currentRoom/constants.js","redux/roomData/constants.js","redux/roomList/constants.js","redux/auth/actions.js","constants/layout.js","helpers/authUtils.js","helpers/api.js","redux/layout/actions.js","redux/appMenu/actions.js","constants/apiConfig.js","redux/areaInfo/actions.js","redux/currentRoom/actions.js","redux/roomData/actions.js","redux/roomList/actions.js","redux/auth/constants.js"],"names":["CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","AuthLayout","React","lazy","VerticalLayout","HorizontalLayout","withLayout","WrappedComponent","HOC","getLayout","isUserAuthenticated","layoutCls","props","layout","layoutType","layoutConstants","Layout","this","fallback","Component","connect","state","Login","Logout","Register","ForgetPassword","Confirm","Status","Report","Config","Store","Help","About","PrivateRoute","component","rest","roles","render","to","pathname","from","location","rootRoute","path","exact","route","statusRoutes","name","icon","FeatherIcon","badge","variant","text","reportRoutes","configRoutes","header","moreRoute","authRoutes","children","Route","allRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","Routes","map","index","key","App","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","action","type","payload","user","getLoggedInUser","loading","Auth","LOGIN_USER","LOGIN_USER_SUCCESS","errorLogin","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","errorRegister","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","passwordResetStatus","errorFogot","FORGET_PASSWORD_FAILED","AppMenu","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","AreaInfo","GET_AREA_INFO","GET_AREA_INFO_SUCCESS","errorGetAreaInfo","area","GET_AREA_INFO_FAILED","CurrentRoom","GET_CURR_ROOM","GET_CURR_ROOM_SUCCESS","info","access","sensorMap","activate","sensorList","errorGetRoomList","GET_CURR_ROOM_FAILED","RoomData","GET_ROOM_DATA","GET_ROOM_DATA_SUCCESS","errorGetRoomData","areaData","currentData","sensorData","GET_ROOM_DATA_FAILED","RoomList","GET_ROOM_LIST","GET_ROOM_LIST_SUCCESS","myRoom","sharedRoom","GET_ROOM_LIST_FAILED","combineReducers","login","getFistData","logout","register","forgetPassword","watchLoginUser","watchGetFirstData","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","JSON","stringify","remove","username","password","options","method","headers","data","url","call","requestApi","response","status","result","put","loginUserSuccess","loginUserFailed","accessToken","console","log","error","history","email","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","body","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","width","theme","uuid","f","menuItems","assignIdAndParent","parentId","id","active","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","window","indexOf","assignIds","initMenuSuccess","activatedMenuItemIds","changeActiveMenuFromLocationSuccess","getAreaInfo","getAreaInfoSuccess","getAreaInfoFailed","watchGetAreaInfo","watchGetAreaInfoSuccess","watchGetAreaInfoFailed","AreaInfoSaga","getCurrentRoom","getCurrentRoomSuccess","getCurrentRoomFailed","watchGetCurrentRoom","watchGetCurrentRoomSuccess","watchGetCurrentRoomFailed","CurrentRoomSaga","getRoomData","getRoomDataSuccess","getRoomDataFailed","watchGetRoomData","watchGetRoomDataSuccess","watchGetRoomDataFailed","RoomDataSaga","getRoomList","getRoomListSuccess","getRoomListFailed","watchGetRoomList","watchGetRoomListSuccess","watchGetRoomListFailed","RoomListSaga","rootSaga","getState","layoutSaga","areaInfoSaga","currentRoomSaga","roomDataSaga","roomListSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","loginUser","registerUser","logoutUser","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","decoded","jwtDecode","currentTime","Date","now","exp","warn","get","parse","axios","require","constants","config","baseURL","BASE_URL","then","res","catch","err","changeSidebarTheme","changeSidebarType","sidebarType","initMenu","BASE_URL2"],"mappings":"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","file":"static/js/main.03491937.chunk.js","sourcesContent":["/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","// @flow\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\r\nconst VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\r\nconst HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\r\n\r\n\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent\r\n */\r\nconst withLayout = (WrappedComponent) => {\r\n    const HOC = class extends Component {\r\n        /**\r\n         * Returns the layout component based on different properties\r\n         */\r\n        getLayout = () => {\r\n            if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n            let layoutCls = VerticalLayout;\r\n\r\n            switch (this.props.layout.layoutType) {\r\n                case layoutConstants.LAYOUT_HORIZONTAL:\r\n                    layoutCls = HorizontalLayout;\r\n                    break;\r\n                default:\r\n                    layoutCls = VerticalLayout;\r\n                    break;\r\n            }\r\n            return layoutCls;\r\n        };\r\n\r\n        render() {\r\n            const Layout = this.getLayout();\r\n            return (\r\n                <Suspense fallback={loading()}>\r\n                    <Layout {...this.props}>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Layout>\r\n                </Suspense>\r\n            );\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            layout: state.Layout,\r\n        };\r\n    };\r\n\r\n    return connect(\r\n        mapStateToProps,\r\n        null\r\n    )(HOC);\r\n};\r\n\r\nexport default withLayout;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\n\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// status\r\nconst Status = React.lazy(() => import('../pages/status'));\r\n// dashboard\r\nconst Report = React.lazy(() => import('../pages/report'));\r\n// config\r\nconst Config = React.lazy(() => import('../pages/config'));\r\n//more pages\r\nconst Store = React.lazy(() => import('../pages/store'));\r\nconst Help = React.lazy(() => import('../pages/help'));\r\nconst About = React.lazy(() => import('../pages/about'));\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/Status\" />,\r\n    route: PrivateRoute,\r\n};\r\n\r\n//status\r\nconst statusRoutes = {\r\n    path: '/Status',\r\n    name: 'Giám sát',\r\n    icon: FeatherIcon.Activity,\r\n    badge: {\r\n        variant: 'success',\r\n        text: '1',\r\n    },\r\n    component: Status,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n// dashboards\r\nconst reportRoutes = {\r\n    path: '/Report',\r\n    name: 'Báo cáo',\r\n    icon: FeatherIcon.Clipboard,\r\n    component: Report,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n\r\n//Config\r\n\r\nconst configRoutes = {\r\n    path: '/Config',\r\n    name: 'Kho lạnh',\r\n    header: 'Quản lý',\r\n    icon: FeatherIcon.Box,\r\n    component: Config,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute,\r\n};\r\n\r\n//More\r\nconst storeRoutes = {\r\n    path: '/More/Store',\r\n    name: 'Cửa hàng',\r\n    header: 'Thêm',\r\n    icon: FeatherIcon.ShoppingBag,\r\n    component: Store,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\nconst helpRoutes = {\r\n    path: '/More/Help',\r\n    name: 'Trợ giúp',\r\n    icon: FeatherIcon.HelpCircle,\r\n    component: Help,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\nconst aboutRoutes = {\r\n    path: '/More/About',\r\n    name: 'Về chúng tôi',\r\n    icon: FeatherIcon.GitHub,\r\n    component: About,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\nconst moreRoute = [storeRoutes, helpRoutes, aboutRoutes];\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach((item) => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [rootRoute, statusRoutes, reportRoutes, configRoutes, ...moreRoute, authRoutes];\r\n\r\nconst authProtectedRoutes = [statusRoutes, reportRoutes, configRoutes, ...moreRoute];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\n//import { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n//import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n//import './assets/scss/theme-rtl.scss';\r\n\r\n// configure fake backend\r\n//configureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n    render() {\r\n        return <Routes></Routes>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, errorLogin: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, errorLogin: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, errorRegister: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, errorRegister: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, errorFogot: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, errorFogot: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","import {\r\n    GET_AREA_INFO,\r\n    GET_AREA_INFO_SUCCESS,\r\n    GET_AREA_INFO_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false\r\n};\r\n\r\nconst AreaInfo = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_AREA_INFO:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_AREA_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetAreaInfo: false,\r\n                area: action.payload\r\n            }\r\n        case GET_AREA_INFO_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetAreaInfo: action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default AreaInfo;","import {\r\n    GET_CURR_ROOM,\r\n    GET_CURR_ROOM_SUCCESS,\r\n    GET_CURR_ROOM_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false\r\n};\r\n\r\nconst CurrentRoom = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_CURR_ROOM:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_CURR_ROOM_SUCCESS:\r\n            const {\r\n                info,\r\n                access,\r\n                sensorMap,\r\n                area,\r\n                activate,\r\n                sensorList\r\n            } = action.payload\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetRoomList: false,\r\n                info,\r\n                access,\r\n                sensorMap,\r\n                area,\r\n                activate,\r\n                sensorList\r\n            }\r\n        case GET_CURR_ROOM_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetRoomList: action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default CurrentRoom;","import {\r\n    GET_ROOM_DATA,\r\n    GET_ROOM_DATA_SUCCESS,\r\n    GET_ROOM_DATA_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false,\r\n};\r\n\r\nconst RoomData = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_ROOM_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ROOM_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetRoomData: false,\r\n                areaData: action.payload.areaData,\r\n                currentData: action.payload.currentData,\r\n                sensorData: action.payload.sensorData\r\n            }\r\n        case GET_ROOM_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetRoomData: action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default RoomData;","import {\r\n    GET_ROOM_LIST,\r\n    GET_ROOM_LIST_SUCCESS,\r\n    GET_ROOM_LIST_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false,\r\n}\r\n\r\nconst RoomList = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_ROOM_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case GET_ROOM_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetRoomList: false,\r\n                myRoom: action.payload.myRoom,\r\n                sharedRoom: action.payload.sharedRoom\r\n            }\r\n        case GET_ROOM_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errorGetRoomList: action.payload\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default RoomList;","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\nimport AreaInfo from './areaInfo/reducers'\r\nimport CurrentRoom from './currentRoom/reducers'\r\nimport RoomData from './roomData/reducers'\r\nimport RoomList from './roomList/reducers'\r\n\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n    AreaInfo,\r\n    CurrentRoom,\r\n    RoomData,\r\n    RoomList,\r\n});\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { requestApi } from 'helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD ,LOGIN_USER_SUCCESS} from './constants';\r\nimport { BASE_URL} from 'constants/apiConfig.js';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = (user) => {\r\n    let cookies = new Cookies();\r\n    if (user) {\r\n        cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    } else {\r\n        cookies.remove('user', { path: '/' });\r\n    }\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data:{username,password},\r\n        url : 'api/auth/signin'\r\n    };\r\n    try {\r\n        const response = yield call(requestApi, options);\r\n        if (response.status==='success') {\r\n           \r\n            setSession(response.result);\r\n            yield put(loginUserSuccess(response.result));\r\n        } else {\r\n            setSession(null);\r\n            yield put(loginUserFailed(response.result)); //message\r\n        }\r\n    } catch (error) {\r\n        setSession(null);\r\n        yield put(loginUserFailed(error)); //message\r\n    }\r\n}\r\n\r\n\r\nfunction* getFistData({ payload: {accessToken} }) { \r\n    const options = {\r\n        method: 'get',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token':  accessToken\r\n        },\r\n        url : 'api/room/access/all'\r\n    };\r\n    try {\r\n        const response = yield call(requestApi, options);\r\n        if (response.status==='success') {\r\n            yield console.log(response.result);\r\n        } else {\r\n            yield console.log(response.result);\r\n        }\r\n    } catch (error) {\r\n        yield console.error(error);\r\n    } \r\n}\r\n\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { username, email, password } }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data:{username,password,email},\r\n        url : 'api/auth/signup'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n           \r\n            yield put(registerUserSuccess(response.result));\r\n        } else {\r\n            yield put(registerUserFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserFailed('Erro'));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: {email, username } }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data:{email,username},\r\n        url : 'api/user/forgotPassword'\r\n    };\r\n    try {\r\n        const response = yield call(requestApi, options);\r\n        if (response.status==='success'){\r\n            yield put(forgetPasswordSuccess(response.result));\r\n        } else {\r\n\r\n            yield put(forgetPasswordFailed(response.result)); //message\r\n        }\r\n    } catch (error) {\r\n        yield put(forgetPasswordFailed(error)); //message\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchGetFirstData() {\r\n    yield takeEvery(LOGIN_USER_SUCCESS, getFistData);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword),fork(watchGetFirstData)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nconst f = (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\nexport default f;\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    GET_AREA_INFO,\r\n    GET_AREA_INFO_SUCCESS,\r\n    GET_AREA_INFO_FAILED,\r\n} from './constants';\r\n\r\nimport {\r\n    getAreaInfo as getAreaInfoAction,\r\n    getAreaInfoSuccess as getAreaInfoSuccessAction,\r\n    getAreaInfoFailed as getAreaInfoFailedAction\r\n} from './actions';\r\n\r\nfunction* getAreaInfo(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction* getAreaInfoSuccess(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\nfunction* getAreaInfoFailed(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction * watchGetAreaInfo(){\r\n    yield takeEvery(GET_AREA_INFO, getAreaInfo);\r\n}\r\n\r\nfunction * watchGetAreaInfoSuccess(){\r\n    yield takeEvery(GET_AREA_INFO_SUCCESS, getAreaInfoSuccess);\r\n}\r\n\r\nfunction * watchGetAreaInfoFailed(){\r\n    yield takeEvery(GET_AREA_INFO_FAILED, getAreaInfoFailed);\r\n}\r\n\r\n\r\nfunction* AreaInfoSaga(){\r\n    yield all([\r\n        fork(watchGetAreaInfo),\r\n        fork(watchGetAreaInfoSuccess),\r\n        fork(watchGetAreaInfoFailed)\r\n    ])\r\n}\r\n\r\nexport default AreaInfoSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    GET_CURR_ROOM,\r\n    GET_CURR_ROOM_SUCCESS,\r\n    GET_CURR_ROOM_FAILED,\r\n} from './constants';\r\n\r\nimport {\r\n    getCurrentRoom as getCurrentRoomAction,\r\n    getCurrentRoomSuccess as getCurrentRoomSuccessAction,\r\n    getCurrentRoomFailed as getCurrentRoomFailedAction\r\n} from './actions';\r\n\r\nfunction* getCurrentRoom(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction* getCurrentRoomSuccess(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\nfunction* getCurrentRoomFailed(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction * watchGetCurrentRoom(){\r\n    yield takeEvery(GET_CURR_ROOM, getCurrentRoom);\r\n}\r\n\r\nfunction * watchGetCurrentRoomSuccess(){\r\n    yield takeEvery(GET_CURR_ROOM_SUCCESS, getCurrentRoomSuccess);\r\n}\r\n\r\nfunction * watchGetCurrentRoomFailed(){\r\n    yield takeEvery(GET_CURR_ROOM_FAILED, getCurrentRoomFailed);\r\n}\r\n\r\n\r\nfunction* CurrentRoomSaga(){\r\n    yield all([\r\n        fork(watchGetCurrentRoom),\r\n        fork(watchGetCurrentRoomSuccess),\r\n        fork(watchGetCurrentRoomFailed)\r\n    ])\r\n}\r\n\r\nexport default CurrentRoomSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    GET_ROOM_DATA,\r\n    GET_ROOM_DATA_SUCCESS,\r\n    GET_ROOM_DATA_FAILED,\r\n} from './constants';\r\n\r\nimport {\r\n    getRoomData as getRoomDataAction,\r\n    getRoomDataSuccess as getRoomDataSuccessAction,\r\n    getRoomDataFailed as getRoomDataFailedAction\r\n} from './actions';\r\n\r\nfunction* getRoomData(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction* getRoomDataSuccess(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\nfunction* getRoomDataFailed(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction * watchGetRoomData(){\r\n    yield takeEvery(GET_ROOM_DATA, getRoomData);\r\n}\r\n\r\nfunction * watchGetRoomDataSuccess(){\r\n    yield takeEvery(GET_ROOM_DATA_SUCCESS, getRoomDataSuccess);\r\n}\r\n\r\nfunction * watchGetRoomDataFailed(){\r\n    yield takeEvery(GET_ROOM_DATA_FAILED, getRoomDataFailed);\r\n}\r\n\r\n\r\nfunction* RoomDataSaga(){\r\n    yield all([\r\n        fork(watchGetRoomData),\r\n        fork(watchGetRoomDataSuccess),\r\n        fork(watchGetRoomDataFailed)\r\n    ])\r\n}\r\n\r\nexport default RoomDataSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    GET_ROOM_LIST,\r\n    GET_ROOM_LIST_SUCCESS,\r\n    GET_ROOM_LIST_FAILED,\r\n} from './constants';\r\n\r\nimport {\r\n    getRoomList as getRoomListAction,\r\n    getRoomListSuccess as getRoomListSuccessAction,\r\n    getRoomListFailed as getRoomListFailedAction\r\n} from './actions';\r\n\r\nfunction* getRoomList(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction* getRoomListSuccess(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\nfunction* getRoomListFailed(){\r\n    try{\r\n        yield ()=>{}\r\n    } catch (error){}\r\n}\r\n\r\nfunction * watchGetRoomList(){\r\n    yield takeEvery(GET_ROOM_LIST, getRoomList);\r\n}\r\n\r\nfunction * watchGetRoomListSuccess(){\r\n    yield takeEvery(GET_ROOM_LIST_SUCCESS, getRoomListSuccess);\r\n}\r\n\r\nfunction * watchGetRoomListFailed(){\r\n    yield takeEvery(GET_ROOM_LIST_FAILED, getRoomListFailed);\r\n}\r\n\r\n\r\nfunction* RoomListSaga(){\r\n    yield all([\r\n        fork(watchGetRoomList),\r\n        fork(watchGetRoomListSuccess),\r\n        fork(watchGetRoomListFailed)\r\n    ])\r\n}\r\n\r\nexport default RoomListSaga;","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\nimport areaInfoSaga from './areaInfo/saga'\r\nimport currentRoomSaga from './currentRoom/saga'\r\nimport roomDataSaga from './roomData/saga'\r\nimport roomListSaga from './roomList/saga'\r\n\r\nexport default function* rootSaga(getState) {\r\n    yield all([\r\n        authSaga(),\r\n        layoutSaga(),\r\n        appMenuSaga(),\r\n        areaInfoSaga(),\r\n        currentRoomSaga(),\r\n        roomDataSaga(),\r\n        roomListSaga(),\r\n    ]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","export const GET_AREA_INFO = \"GET_AREA_INFO\";\r\nexport const GET_AREA_INFO_SUCCESS = \"GET_AREA_INFO_SUCCESS\";\r\nexport const GET_AREA_INFO_FAILED = \"GET_AREA_INFO_FAILED\";","export const GET_CURR_ROOM = \"GET_CURR_ROOM\";\r\nexport const GET_CURR_ROOM_SUCCESS = \"GET_CURR_ROOM_SUCCESS\";\r\nexport const GET_CURR_ROOM_FAILED = \"GET_CURR_ROOM_FAILED\";","export const GET_ROOM_DATA = \"GET_ROOM_DATA\";\r\nexport const GET_ROOM_DATA_SUCCESS = \"GET_ROOM_DATA_SUCCESS\";\r\nexport const GET_ROOM_DATA_FAILED = \"GET_ROOM_DATA_FAILED\";","export const GET_ROOM_LIST = \"GET_ROOM_LIST\";\r\nexport const GET_ROOM_LIST_SUCCESS = \"GET_ROOM_LIST_SUCCESS\";\r\nexport const GET_ROOM_LIST_FAILED = \"GET_ROOM_LIST_FAILED\";","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (username, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { username, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (email,username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: {email,username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\nimport {requestApi} from './api';\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(user.accessToken);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    let newUser= user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n    return newUser;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","const axios = require('axios');\r\nconst constants = require('constants/apiConfig');\r\n/**\r\n * Fetch data from given url\r\n * @param {*} config\r\n */\r\nconst requestApi =(config={}) => {\r\n    console.log(config);\r\n    return axios({...config,baseURL: constants.BASE_URL})\r\n        .then(res=>{\r\n            /* console.log(res.status);\r\n            console.log(res.data); */\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            /* console.log(err.response.status);\r\n            console.log(err.response.data); */\r\n            return err.response.data;\r\n        })\r\n};\r\n\r\nexport { requestApi };\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","export const BASE_URL = \"http://vikhan.herokuapp.com/\"\r\nexport const BASE_URL2 = \"http://localhost:8080/\"\r\n","import { all } from 'redux-saga/effects';\r\nimport {\r\n    GET_AREA_INFO,\r\n    GET_AREA_INFO_SUCCESS,\r\n    GET_AREA_INFO_FAILED,\r\n} from './constants';\r\n\r\nexport const getAreaInfo = (areaInfo) => ({\r\n    type: GET_AREA_INFO,\r\n    payload: areaInfo\r\n})\r\n\r\nexport const getAreaInfoSuccess = (data) => ({\r\n    type: GET_AREA_INFO_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const getAreaInfoFailed = (error) => ({\r\n    type: GET_AREA_INFO_FAILED,\r\n    payload: error\r\n})","import { all } from 'redux-saga/effects';\r\nimport {\r\n    GET_CURR_ROOM,\r\n    GET_CURR_ROOM_SUCCESS,\r\n    GET_CURR_ROOM_FAILED,\r\n} from './constants';\r\n\r\nexport const getCurrentRoom = (currentRoom) => ({\r\n    type: GET_CURR_ROOM,\r\n    payload: currentRoom\r\n})\r\n\r\nexport const getCurrentRoomSuccess = (data) => ({\r\n    type: GET_CURR_ROOM_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const getCurrentRoomFailed = (error) => ({\r\n    type: GET_CURR_ROOM_FAILED,\r\n    payload: error\r\n})","import { all } from 'redux-saga/effects';\r\nimport {\r\n    GET_ROOM_DATA,\r\n    GET_ROOM_DATA_SUCCESS,\r\n    GET_ROOM_DATA_FAILED,\r\n} from './constants';\r\n\r\nexport const getRoomData = (roomData) => ({\r\n    type: GET_ROOM_DATA,\r\n    payload: roomData\r\n})\r\n\r\nexport const getRoomDataSuccess = (data) => ({\r\n    type: GET_ROOM_DATA_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const getRoomDataFailed = (error) => ({\r\n    type: GET_ROOM_DATA_FAILED,\r\n    payload: error\r\n})","import { all } from 'redux-saga/effects';\r\nimport {\r\n    GET_ROOM_LIST,\r\n    GET_ROOM_LIST_SUCCESS,\r\n    GET_ROOM_LIST_FAILED,\r\n} from './constants';\r\n\r\nexport const getRoomList = (roomList) => ({\r\n    type: GET_ROOM_LIST,\r\n    payload: roomList\r\n})\r\n\r\nexport const getRoomListSuccess = (data) => ({\r\n    type: GET_ROOM_LIST_SUCCESS,\r\n    payload: data\r\n})\r\n\r\nexport const getRoomListFailed = (error) => ({\r\n    type: GET_ROOM_LIST_FAILED,\r\n    payload: error\r\n})","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n"],"sourceRoot":""}
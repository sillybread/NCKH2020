{"version":3,"sources":["helpers/api.js","redux/roomData/constants.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/roomList/reducers.js","redux/notification/reducers.js","redux/roomData/reducers.js","redux/roomStructrure/reducers.js","redux/roomAccess/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/roomList/saga.js","redux/notification/saga.js","redux/roomData/saga.js","redux/roomStructrure/saga.js","redux/roomAccess/saga.js","redux/sagas.js","redux/store.js","index.js","redux/roomStructrure/constants.js","redux/notification/constants.js","redux/auth/constants.js","redux/layout/constants.js","redux/roomList/actions.js","redux/roomAccess/actions.js","redux/roomData/actions.js","redux/roomStructrure/actions.js","redux/appMenu/constants.js","redux/auth/actions.js","constants/layout.js","redux/notification/actions.js","helpers/roomUtils.js","redux/layout/actions.js","helpers/authUtils.js","redux/appMenu/actions.js","redux/roomList/constants.js","constants/apiConfig.js","redux/roomAccess/constants.js"],"names":["axios","require","constants","requestApi","config","baseURL","BASE_URL","then","res","data","catch","err","response","GET_AREA_DATA","GET_AREA_DATA_SUCCESS","GET_AREA_DATA_FAILED","GET_CURRENT_DATA","GET_CURRENT_DATA_SUCCESS","GET_CURRENT_DATA_FAILED","GET_SENSOR_DATA","GET_SENSOR_DATA_SUCCESS","GET_SENSOR_DATA_FAILED","GET_CUBE_DATA","GET_CUBE_DATA_SUCCESS","GET_CUBE_DATA_FAILED","AuthLayout","React","lazy","VerticalLayout","HorizontalLayout","withLayout","WrappedComponent","HOC","getLayout","isUserAuthenticated","layoutCls","props","layout","layoutType","layoutConstants","Layout","this","fallback","Component","connect","state","Login","Logout","Register","ForgetPassword","Confirm","Status","Report","SensorMap","AreaConfig","Management","WareHouseConfig","ApiService","Store","Help","About","PrivateRoute","component","roles","rest","currentRole","useSelector","RoomList","currentRoom","role","render","includes","to","pathname","from","location","rootRoute","path","exact","route","statusRoutes","name","icon","FeatherIcon","badge","variant","text","reportRoutes","configRoutes","header","moreRoute","authRoutes","children","Route","allRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","Routes","map","index","key","App","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","action","type","CHANGE_LAYOUT","payload","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","user","getLoggedInUser","loading","Auth","LOGIN_USER","LOGIN_USER_SUCCESS","errorLogin","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","errorRegister","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","passwordResetStatus","errorFogot","FORGET_PASSWORD_FAILED","AppMenu","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","error","myRoom","sharedRoom","getRoomCookieDefault","currentRoomInfo","GET_ROOM_LIST","GET_ROOM_LIST_SUCCESS","rooms","accesses","newMyRoom","filter","e","newSharedRoom","room","_id","undefined","GET_ROOM_LIST_FAILED","SET_CURR_ROOM","setRoomCookieDefault","GET_CURR_ROOM_INFO","GET_CURR_ROOM_INFO_SUCCESS","GET_CURR_ROOM_INFO_FAILED","CREATE_ROOM","CREATE_ROOM_SUCCESS","newRoom","newListMyRoom","CREATE_ROOM_FAILED","UPDATE_ROOM","UPDATE_ROOM_SUCCESS","tempUpdateRoom","newSharedRoomU","newMyRoomU","it","UPDATE_ROOM_FAILED","DELETE_ROOM","DELETE_ROOM_SUCCESS","tempShareRoom","r","room_id","tempMyRoom","tempCurrent","DELETE_ROOM_FAILED","Notification","GET_NOTIFICATION_LIST","GET_NOTIFICATION_LIST_SUCCESS","list","GET_NOTIFICATION_LIST_FAILED","DELETE_NOTIFICATION","DELETE_NOTIFICATION_SUCCESS","noti","notification_id","DELETE_NOTIFICATION_FAILED","DELETE_ALL_NOTIFICATION","DELETE_ALL_NOTIFICATION_SUCCESS","DELETE_ALL_NOTIFICATION_FAILED","UPDATE_NOTIFICATION","newState","targetIndex","findIndex","id","PUSH_NOTIFICATION","newList","unshift","notification","areaData","sensorData","cubeData","currentData","RoomData","cr","Array","length","shift","structure","RoomStructrure","GET_CURR_ROOM_SENSOR_MAP","GET_CURR_ROOM_SENSOR_MAP_SUCCESS","GET_CURR_ROOM_SENSOR_MAP_FAILED","ADD_SENSOR","ADD_SENSOR_SUCCESS","ADD_SENSOR_FAILED","UPDATE_SENSOR","UPDATE_SENSOR_SUCCESS","UPDATE_SENSOR_FAILED","DELETE_SENSOR","DELETE_SENSOR_SUCCESS","DELETE_SENSOR_FAILED","RoomAccess","GET_USER_ACCESS","GET_USER_ACCESS_SUCCESS","GET_USER_ACCESS_FAILED","ADD_ACCESS","ADD_ACCESS_SUCCESS","newAccesses","access","ADD_ACCESS_FAILED","UPDATE_ACCESS","UPDATE_ACCESS_SUCCESS","ac","acces","UPDATE_ACCESS_FAILED","REPLY_ACCESS","REPLY_ACCESS_SUCCESS","REPLY_ACCESS_FAILED","DELETE_ACCESS","DELETE_ACCESS_SUCCESS","DELETE_ACCESS_FAILED","combineReducers","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","JSON","stringify","remove","username","password","options","method","headers","url","call","status","result","put","loginUserSuccess","loginUserFailed","history","setCurrentRoom","email","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","body","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","width","theme","uuid","f","menuItems","assignIdAndParent","parentId","active","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","window","indexOf","assignIds","initMenuSuccess","activatedMenuItemIds","changeActiveMenuFromLocationSuccess","getRoomList","getRoomInfo","updateRoom","deleteRoom","watchGetRoomList","watchGetCurrentRoomInfo","watchCreateRoom","watchUpdateRoom","watchDeleteRooms","RoomListSaga","accessToken","getRoomListSuccess","getRoomListFailed","params","getCurrentRoomInfoSuccess","getCurrentRoomInfoFailed","createRoomSuccess","createRoomFailed","room_info","updateRoomSuccess","updateRoomFailed","deleteRoomSuccess","deleteRoomFailed","getNotificationList","deleteNotification","deleteAllNotification","watchGetNotification","watchDeleteNotification","watchDeleteAllNotification","getNotificationListSuccess","notifications","getNotificationListFailed","deleteNotificationSuccess","deleteNotificationFailed","deleteAllNotificationSuccess","deleteAllNotificationFailed","getAreaData","getCurrentData","getSensorData","getCubeData","watchGetAreaData","watchGetCurrentData","watchGetSensorData","watchGetCubeData","RoomDataSaga","getAreaDataSuccess","getAreaDataFailed","getCurrentDataSuccess","getCurrentDataFailed","getSensorDataSuccess","getSensorDataFailed","getCubeDataSuccess","getCubeDataFailed","getCurrentRoomSensorMap","updateSensor","addSensor","deleteSensor","watchGetCurrentRoomSensorMap","watchUpdateSensor","watchAddeSensor","watchDeleteSensor","roomStructrureSaga","getRoomStructureSuccess","getRoomStructureFailed","sensor_id","updateSensorSuccess","updateSensorFailed","addSensorSuccess","addSensorFailed","deleteSensorSuccess","deleteSensorFailed","getUserAccessApi","addAccessApi","updateAccessApi","replyAccessApi","deleteAccessApi","watchGetUserAccess","watchAddAccess","watchUpdateAccess","watchReplyAccess","watchDeleteAccess","roomAccessSaga","getUserAccessSuccess","getUserAccessFailed","user_id","AddAccessSuccess","AddAccessFailed","access_id","updateAccessSuccess","updateAccessFailed","accepted","replyAccessSuccess","replyAccessFailed","deleteAccessSuccess","deleteAccessFailed","rootSaga","getState","layoutSaga","roomListSaga","notificationListSaga","roomDataSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","placement","autoDismissTimeout","getElementById","getCurrentRoomInfo","createRoom","getUserAccess","AddAccess","getRoomStructure","loginUser","registerUser","logoutUser","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","updateNotification","pushNotification","get","parse","changeSidebarTheme","changeSidebarType","sidebarType","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","initMenu","BASE_URL2"],"mappings":"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","file":"static/js/main.6aa1dcdf.chunk.js","sourcesContent":["const axios = require('axios');\r\nconst constants = require('constants/apiConfig');\r\n/**\r\n * Fetch data from given url\r\n * @param {*} config\r\n */\r\nconst requestApi =(config={}) => {\r\n    //console.log(config);\r\n    return axios({...config,baseURL: constants.BASE_URL})\r\n        .then(res=>{\r\n            /* console.log(res.status);\r\n            console.log(res.data); */\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            /* console.log(err.response.status);\r\n            console.log(err.response.data); */\r\n            return err.response.data;\r\n        })\r\n};\r\n\r\nexport { requestApi };\r\n","export const GET_AREA_DATA = \"GET_AREA_DATA\";\r\nexport const GET_AREA_DATA_SUCCESS = \"GET_AREA_DATA_SUCCESS\";\r\nexport const GET_AREA_DATA_FAILED = \"GET_AREA_DATA_FAILED\";\r\n\r\nexport const GET_CURRENT_DATA = \"GET_CURRENT_DATA\";\r\nexport const GET_CURRENT_DATA_SUCCESS = \"GET_CURRENT_DATA_SUCCESS\";\r\nexport const GET_CURRENT_DATA_FAILED = \"GET_CURRENT_DATA_FAILED\";\r\n\r\nexport const GET_SENSOR_DATA = \"GET_SENSOR_DATA\";\r\nexport const GET_SENSOR_DATA_SUCCESS = \"GET_SENSOR_DATA_SUCCESS\";\r\nexport const GET_SENSOR_DATA_FAILED = \"GET_SENSOR_DATA_FAILED\";\r\n\r\nexport const GET_CUBE_DATA = \"GET_CUBE_DATA\";\r\nexport const GET_CUBE_DATA_SUCCESS = \"GET_CUBE_DATA_SUCCESS\";\r\nexport const GET_CUBE_DATA_FAILED = \"GET_CUBE_DATA_FAILED\";","// @flow\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\r\nconst VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\r\nconst HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\r\n\r\n\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent\r\n */\r\nconst withLayout = (WrappedComponent) => {\r\n    const HOC = class extends Component {\r\n        /**\r\n         * Returns the layout component based on different properties\r\n         */\r\n        getLayout = () => {\r\n            if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n            let layoutCls = VerticalLayout;\r\n\r\n            switch (this.props.layout.layoutType) {\r\n                case layoutConstants.LAYOUT_HORIZONTAL:\r\n                    layoutCls = HorizontalLayout;\r\n                    break;\r\n                default:\r\n                    layoutCls = VerticalLayout;\r\n                    break;\r\n            }\r\n            return layoutCls;\r\n        };\r\n\r\n        render() {\r\n            const Layout = this.getLayout();\r\n            return (\r\n                <Suspense fallback={loading()}>\r\n                    <Layout {...this.props}>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Layout>\r\n                </Suspense>\r\n            );\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            layout: state.Layout,\r\n        };\r\n    };\r\n\r\n    return connect(\r\n        mapStateToProps,\r\n        null\r\n    )(HOC);\r\n};\r\n\r\nexport default withLayout;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport {useSelector} from 'react-redux';\r\n\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// status\r\nconst Status = React.lazy(() => import('../pages/status'));\r\n// dashboard\r\nconst Report = React.lazy(() => import('../pages/report'));\r\n// config\r\nconst SensorMap = React.lazy(() => import('../pages/config/sensorMap/sensorMap'));\r\nconst AreaConfig = React.lazy(() => import('../pages/config/area/areaConfig'));\r\nconst Management = React.lazy(() => import('../pages/config/managerments/Management'));\r\nconst WareHouseConfig = React.lazy(() => import('../pages/config/warehouseConfig/warehouseConfig'));\r\nconst ApiService = React.lazy(() => import('../pages/config/apiService/ApiService'));\r\n\r\n\r\n//more pages\r\nconst Store = React.lazy(() => import('../pages/store'));\r\nconst Help = React.lazy(() => import('../pages/help'));\r\nconst About = React.lazy(() => import('../pages/about'));\r\n\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n    const currentRole = useSelector(state => { \r\n        if(state.RoomList.currentRoom)\r\n            return state.RoomList.currentRoom.role\r\n        else\r\n            return null;\r\n        });\r\n\r\n    return (\r\n        <Route\r\n        {...rest}\r\n        render={(props) => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n            if  (currentRole!=null && roles) \r\n                if(!roles.includes(currentRole))\r\n                    return <Redirect to={{ pathname: '/More/About', state: { from: props.location } }} />;\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n        />\r\n    )\r\n};\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/Status\" />,\r\n    route: PrivateRoute,\r\n};\r\n\r\n//status\r\nconst statusRoutes = {\r\n    path: '/Status',\r\n    name: 'Giám sát',\r\n    icon: FeatherIcon.Activity,\r\n    badge: {\r\n        variant: 'success',\r\n        text: '1',\r\n    },\r\n    component: Status,\r\n    roles: ['Owner','Manager','Viewer'],\r\n    route: PrivateRoute,\r\n};\r\n// dashboards\r\nconst reportRoutes = {\r\n    path: '/Report',\r\n    name: 'Báo cáo',\r\n    icon: FeatherIcon.Clipboard,\r\n    component: Report,\r\n    roles: ['Owner','Manager'],\r\n    route: PrivateRoute,\r\n};\r\n\r\n//Config\r\nconst configSensorMap = {\r\n    path: '/Config/Sensor',\r\n    header: 'Quản lý kho lạnh',\r\n    name: 'Cảm biến',\r\n    icon: FeatherIcon.Cpu,\r\n    component: SensorMap,\r\n    roles: ['Owner','Manager'],\r\n    route: PrivateRoute,\r\n};\r\nconst configArea = {\r\n    path: '/Config/Area',\r\n    name: 'Khu vực',\r\n    icon: FeatherIcon.Codepen,\r\n    component: AreaConfig,\r\n    roles: ['Owner','Manager'],\r\n    route: PrivateRoute,\r\n};\r\nconst configManager = {\r\n    path: '/Config/Manager',\r\n    name: 'Người truy cập',\r\n    icon: FeatherIcon.Users,\r\n    component: Management,\r\n    roles: ['Owner','Manager'],\r\n    route: PrivateRoute,\r\n};\r\nconst configWarehouse = {\r\n    path: '/Config/Info',\r\n    name: 'Thông tin kho',\r\n    icon: FeatherIcon.AlertCircle,\r\n    component: WareHouseConfig,\r\n    roles: ['Owner','Manager'],\r\n    route: PrivateRoute,\r\n};\r\nconst configApi = {\r\n    path: '/Config/Api',\r\n    name: 'Tài khoản Api',\r\n    icon: FeatherIcon.Rss,\r\n    component: ApiService,\r\n    roles: ['Owner','Manager'],\r\n    route: PrivateRoute,\r\n};\r\n\r\n\r\nconst configRoutes = [configSensorMap, configArea, configManager,configWarehouse,configApi];\r\n\r\n//More\r\nconst storeRoutes = {\r\n    path: '/More/Store',\r\n    name: 'Cửa hàng',\r\n    header: 'Tiện ích',\r\n    icon: FeatherIcon.ShoppingBag,\r\n    component: Store,\r\n    route: PrivateRoute,\r\n    roles: ['User','Owner','Manager','Viewer'],\r\n};\r\nconst helpRoutes = {\r\n    path: '/More/Help',\r\n    name: 'Trợ giúp',\r\n    icon: FeatherIcon.HelpCircle,\r\n    component: Help,\r\n    route: PrivateRoute,\r\n    roles: ['User','Owner','Manager','Viewer'],\r\n};\r\nconst aboutRoutes = {\r\n    path: '/More/About',\r\n    name: 'Về chúng tôi',\r\n    icon: FeatherIcon.GitHub,\r\n    component: About,\r\n    route: PrivateRoute,\r\n    roles: ['User','Owner','Manager','Viewer'],\r\n};\r\nconst moreRoute = [storeRoutes, helpRoutes, aboutRoutes];\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach((item) => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [rootRoute, statusRoutes, reportRoutes,...configRoutes,...moreRoute,authRoutes];\r\n\r\nconst authProtectedRoutes = [statusRoutes, reportRoutes,...configRoutes, ...moreRoute];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\n//import { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n//import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n//import './assets/scss/theme-rtl.scss';\r\n\r\n// configure fake backend\r\n//configureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n    render() {\r\n        return <Routes></Routes>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, errorLogin: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, errorLogin: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, errorRegister: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, errorRegister: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, errorFogot: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, errorFogot: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","import { getRoomCookieDefault,setRoomCookieDefault } from 'helpers/roomUtils';\r\nimport { setCurrentRoom } from './actions';\r\nimport {\r\n    GET_ROOM_LIST,\r\n    GET_ROOM_LIST_SUCCESS,\r\n    GET_ROOM_LIST_FAILED,\r\n\r\n    SET_CURR_ROOM,\r\n\r\n    CREATE_ROOM,\r\n    CREATE_ROOM_SUCCESS,\r\n    CREATE_ROOM_FAILED,\r\n\r\n    UPDATE_ROOM,\r\n    UPDATE_ROOM_SUCCESS,\r\n    UPDATE_ROOM_FAILED,\r\n\r\n    DELETE_ROOM,\r\n    DELETE_ROOM_SUCCESS,\r\n    DELETE_ROOM_FAILED,\r\n    GET_CURR_ROOM_INFO,\r\n    GET_CURR_ROOM_INFO_SUCCESS,\r\n    GET_CURR_ROOM_INFO_FAILED,\r\n} from './constants';\r\n\r\n\r\nconst INIT_STATE = {\r\n    loading: false,\r\n    error:null,\r\n    myRoom:[],\r\n    sharedRoom:[],\r\n    currentRoom: getRoomCookieDefault(),\r\n    currentRoomInfo:null\r\n}\r\n\r\nconst RoomList = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_ROOM_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            }\r\n        case GET_ROOM_LIST_SUCCESS:\r\n            const rooms = action.payload.accesses;\r\n            const newMyRoom = rooms.filter((e)=>(e.role===\"Owner\"));\r\n            const newSharedRoom = rooms.filter((e)=>(e.role!=\"Owner\"));\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error:null,\r\n                myRoom: newMyRoom,\r\n                sharedRoom: newSharedRoom,\r\n                currentRoom: (getRoomCookieDefault()) ? getRoomCookieDefault() :\r\n                                (newMyRoom[0]) ? newMyRoom[0] : \r\n                                    (newSharedRoom[0]) ? newSharedRoom[0] :\r\n                                        {\r\n                                            role:'Viewer',\r\n                                            room: {\r\n                                                _id: undefined,\r\n                                                name: \"Chưa có kho lạnh nào\"\r\n                                            }\r\n                                        }\r\n            }\r\n        \r\n        case GET_ROOM_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                myRoom:[],\r\n                sharedRoom:[],\r\n                error:action.payload.error,\r\n                currentRoom:null,\r\n            }\r\n\r\n        case SET_CURR_ROOM:\r\n            setRoomCookieDefault(action.payload.room);\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n                currentRoom: action.payload.room\r\n            }\r\n        case GET_CURR_ROOM_INFO:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            }\r\n        case GET_CURR_ROOM_INFO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                currentRoomInfo: action.payload.room\r\n            }\r\n        case GET_CURR_ROOM_INFO_FAILED:\r\n            setRoomCookieDefault(null);\r\n            return {\r\n                ...state,\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n                currentRoomInfo: null,\r\n            }\r\n\r\n        case CREATE_ROOM:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error:null\r\n            }\r\n        case CREATE_ROOM_SUCCESS:\r\n            let newRoom = {\r\n                role: \"Owner\",\r\n                    room: {\r\n                        _id: action.payload.room._id,\r\n                        name: action.payload.room.name,\r\n                    }\r\n            }\r\n            let newListMyRoom = [...state.myRoom];\r\n            newListMyRoom.push(newRoom);\r\n            setRoomCookieDefault(newRoom);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                myRoom: newListMyRoom,\r\n                currentRoom: newRoom\r\n            }\r\n        case CREATE_ROOM_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            }\r\n\r\n\r\n        case UPDATE_ROOM:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error:null\r\n            }\r\n        case UPDATE_ROOM_SUCCESS:\r\n            let tempUpdateRoom = {\r\n                role: state.currentRoom.role,\r\n                room:{\r\n                    ...state.currentRoom.room,\r\n                    name: action.payload.room.name\r\n                }\r\n            }\r\n            let newSharedRoomU =null;\r\n            let newMyRoomU = null;\r\n            if(tempUpdateRoom.role === 'Owner'){\r\n                newMyRoomU = [...state.myRoom]\r\n                newMyRoomU = newMyRoomU.map(it => {\r\n                    return (it.room._id === tempUpdateRoom.room._id) ? tempUpdateRoom : it\r\n                });\r\n            }else{\r\n                newSharedRoomU = [...state.sharedRoom]\r\n                newSharedRoomU = newSharedRoomU.map(it => {\r\n                    return (it.room._id === tempUpdateRoom.room._id) ?tempUpdateRoom: it\r\n                });\r\n            }\r\n            setRoomCookieDefault(tempUpdateRoom);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                currentRoomInfo: action.payload.room,\r\n                currentRoom: tempUpdateRoom,\r\n                myRoom: (newMyRoomU)? newMyRoomU : state.myRoom, \r\n                sharedRoom: (newSharedRoomU)? newSharedRoomU : state.sharedRoom,\r\n            }\r\n        case UPDATE_ROOM_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n\r\n        case DELETE_ROOM:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error:null\r\n            }\r\n        case DELETE_ROOM_SUCCESS:\r\n            let tempShareRoom = [...state.sharedRoom].filter(r => (r.room._id !== action.payload.room_id));\r\n            let tempMyRoom = [...state.myRoom].filter(r => (r.room._id !== action.payload.room_id));\r\n            let tempCurrent = (tempMyRoom[0]) ? tempMyRoom[0] : \r\n                (tempShareRoom[0]) ? tempShareRoom[0] :\r\n                    {\r\n                        role:'Viewer',\r\n                        room: {\r\n                            _id: undefined,\r\n                            name: \"Chưa có kho lạnh nào\"\r\n                        }\r\n                    }\r\n            setRoomCookieDefault(null);\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                sharedRoom: tempShareRoom,\r\n                myRoom: tempMyRoom,\r\n                currentRoom: tempCurrent,\r\n                error: null,\r\n            }\r\n        case DELETE_ROOM_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n            \r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default RoomList;","import {\r\n    GET_NOTIFICATION_LIST,\r\n    GET_NOTIFICATION_LIST_SUCCESS,\r\n    GET_NOTIFICATION_LIST_FAILED,\r\n\r\n    DELETE_NOTIFICATION,\r\n    DELETE_NOTIFICATION_SUCCESS,\r\n    DELETE_NOTIFICATION_FAILED,\r\n\r\n    DELETE_ALL_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    DELETE_ALL_NOTIFICATION_FAILED,\r\n    \r\n    UPDATE_NOTIFICATION,\r\n    PUSH_NOTIFICATION\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n}\r\nconst Notification = (state = INIT_STATE, action) => {\r\n    switch (action.type){\r\n        case GET_NOTIFICATION_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case GET_NOTIFICATION_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload.list,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case GET_NOTIFICATION_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                list:[],\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case DELETE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case DELETE_NOTIFICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: [...state.list].filter((noti) =>(noti._id != action.payload.notification_id)),\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case DELETE_NOTIFICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case DELETE_ALL_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case DELETE_ALL_NOTIFICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list:[],\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case DELETE_ALL_NOTIFICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n\r\n\r\n        case UPDATE_NOTIFICATION:\r\n            const newState = {...state}\r\n            const list = newState.list;\r\n            if (!list) return newState;\r\n            const targetIndex = list.findIndex(e => (e._id === action.payload.id));\r\n            if (targetIndex!=-1){\r\n                newState.list[targetIndex] = {\r\n                    ...newState.list[targetIndex],\r\n                    ...action.payload.data\r\n                }\r\n            } \r\n            return newState;\r\n        \r\n        case PUSH_NOTIFICATION:\r\n            let newList = [...state.list];\r\n            newList.unshift(action.payload.notification)\r\n            return {\r\n                ...state,list: newList\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default Notification;","import {\r\n    GET_AREA_DATA,\r\n    GET_AREA_DATA_SUCCESS,\r\n    GET_AREA_DATA_FAILED,\r\n\r\n    GET_CURRENT_DATA,\r\n    GET_CURRENT_DATA_SUCCESS,\r\n    GET_CURRENT_DATA_FAILED,\r\n\r\n    GET_SENSOR_DATA,\r\n    GET_SENSOR_DATA_SUCCESS,\r\n    GET_SENSOR_DATA_FAILED,\r\n\r\n    GET_CUBE_DATA,\r\n    GET_CUBE_DATA_SUCCESS,\r\n    GET_CUBE_DATA_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    areaData:null,\r\n    sensorData:null,\r\n    cubeData:null,\r\n    currentData:null,\r\n    loading:false,\r\n    error:null,\r\n};\r\nconst RoomData = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_AREA_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                areaData:null,\r\n            }\r\n        case GET_AREA_DATA_SUCCESS:\r\n         \r\n            let cr = (state.areaData)?[...state.areaData]: new Array();\r\n             cr.push(action.payload.data);\r\n            if(cr.length >10){\r\n                cr.shift()\r\n            } \r\n            return {\r\n                ...state,\r\n                areaData: cr,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_AREA_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error: action.payload.error,\r\n                areaData:null,\r\n            }\r\n        case GET_CURRENT_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                cubeData:null\r\n            }\r\n        case GET_CURRENT_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_CURRENT_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                currentData:null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        case GET_SENSOR_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n            }\r\n        case GET_SENSOR_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                sensorData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_SENSOR_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                sensorData: null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        case GET_CUBE_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                cubeData:null\r\n            }\r\n        case GET_CUBE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cubeData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_CUBE_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                cubeData: null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default RoomData;","import {\r\n    GET_CURR_ROOM_SENSOR_MAP,\r\n    GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n    GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n\r\n    ADD_SENSOR,\r\n    ADD_SENSOR_SUCCESS,\r\n    ADD_SENSOR_FAILED,\r\n\r\n    UPDATE_SENSOR,\r\n    UPDATE_SENSOR_SUCCESS,\r\n    UPDATE_SENSOR_FAILED,\r\n\r\n    DELETE_SENSOR,\r\n    DELETE_SENSOR_SUCCESS,\r\n    DELETE_SENSOR_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false,\r\n    error:null,\r\n    structure:null\r\n};\r\n\r\nconst RoomStructrure = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_CURR_ROOM_SENSOR_MAP:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n            structure:null\r\n        }\r\n        case GET_CURR_ROOM_SENSOR_MAP_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case GET_CURR_ROOM_SENSOR_MAP_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        case ADD_SENSOR:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n        }\r\n        case ADD_SENSOR_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case ADD_SENSOR_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        case UPDATE_SENSOR:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n        }\r\n        case UPDATE_SENSOR_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case UPDATE_SENSOR_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        case DELETE_SENSOR:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n        }\r\n        case DELETE_SENSOR_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case DELETE_SENSOR_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default RoomStructrure;","import {\r\n    GET_USER_ACCESS,\r\n    GET_USER_ACCESS_SUCCESS,\r\n\r\n    ADD_ACCESS,\r\n    ADD_ACCESS_SUCCESS,\r\n    ADD_ACCESS_FAILED,\r\n\r\n    UPDATE_ACCESS,\r\n    UPDATE_ACCESS_SUCCESS,\r\n    UPDATE_ACCESS_FAILED,\r\n\r\n    REPLY_ACCESS,\r\n    REPLY_ACCESS_SUCCESS,\r\n    REPLY_ACCESS_FAILED,\r\n\r\n    DELETE_ACCESS,\r\n    DELETE_ACCESS_SUCCESS,\r\n    DELETE_ACCESS_FAILED,\r\n    GET_USER_ACCESS_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false,\r\n    error: null,\r\n    accesses: []\r\n};\r\n\r\nconst RoomAccess = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_USER_ACCESS :\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n                accesses: []\r\n            }\r\n        case GET_USER_ACCESS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                accesses: action.payload.accesses\r\n            }\r\n        case GET_USER_ACCESS_FAILED :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n                accesses: []\r\n            }\r\n        case ADD_ACCESS :\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            }\r\n        case ADD_ACCESS_SUCCESS :\r\n            let newAccesses = [...state.accesses];\r\n            newAccesses.push(action.payload.access)\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                accesses: newAccesses\r\n            }\r\n        case ADD_ACCESS_FAILED :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            }\r\n        case UPDATE_ACCESS :\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            }\r\n        case UPDATE_ACCESS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                accesses: [...state.accesses].map(ac => (ac._id === action.payload.access._id)?action.payload.acces:ac)\r\n            }\r\n        case UPDATE_ACCESS_FAILED :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            }\r\n        case REPLY_ACCESS :\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            }\r\n        case REPLY_ACCESS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                accesses: [...state.accesses].push(action.payload.acces)\r\n            }\r\n        case REPLY_ACCESS_FAILED :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            }\r\n        case DELETE_ACCESS :\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null,\r\n            }\r\n        case DELETE_ACCESS_SUCCESS :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: null,\r\n                accesses: [...state.accesses].filter(ac => (ac._id != action.payload.acces._id))\r\n            }\r\n        case DELETE_ACCESS_FAILED :\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error,\r\n            }\r\n\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default RoomAccess;","import { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\n\r\nimport RoomList from './roomList/reducers';\r\nimport Notification from './notification/reducers';\r\nimport RoomData from './roomData/reducers'\r\nimport RoomStructrure from './roomStructrure/reducers'\r\nimport RoomAccess from './roomAccess/reducers'\r\n\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n    RoomList,\r\n    RoomData,\r\n    Notification,\r\n    RoomStructrure,\r\n    RoomAccess\r\n});\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { requestApi } from 'helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD ,LOGIN_USER_SUCCESS} from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n    setCurrentRoom\r\n} from 'redux/actions';\r\n\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = (user) => {\r\n    let cookies = new Cookies();\r\n    if (user) {\r\n        cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    } else {\r\n        cookies.remove('user', { path: '/' });\r\n    }\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data:{username,password},\r\n        url : 'api/auth/signin'\r\n    };\r\n    try {\r\n        const response = yield call(requestApi, options);\r\n        if (response.status==='success') {\r\n            setSession(response.result);\r\n            yield put(loginUserSuccess(response.result));\r\n        } else {\r\n            setSession(null);\r\n            yield put(loginUserFailed(response.result)); //message\r\n        }\r\n    } catch (error) {\r\n        setSession(null);\r\n        yield put(loginUserFailed(error)); //message\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null)\r\n        yield put(setCurrentRoom(null));\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { username, email, password } }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data:{username,password,email},\r\n        url : 'api/auth/signup'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(registerUserSuccess(response.result));\r\n        } else {\r\n            yield put(registerUserFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserFailed('Erro'));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: {email, username } }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        data:{email,username},\r\n        url : 'api/user/forgotPassword'\r\n    };\r\n    try {\r\n        const response = yield call(requestApi, options);\r\n        if (response.status==='success'){\r\n            yield put(forgetPasswordSuccess(response.result));\r\n        } else {\r\n\r\n            yield put(forgetPasswordFailed(response.result)); //message\r\n        }\r\n    } catch (error) {\r\n        yield put(forgetPasswordFailed(error)); //message\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([ fork(watchLoginUser), \r\n                fork(watchLogoutUser), \r\n                fork(watchRegisterUser), \r\n                fork(watchForgetPassword)\r\n            ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nconst f = (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\nexport default f;\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\nimport { requestApi } from 'helpers/api';\r\nimport { CREATE_ROOM, CREATE_ROOM_SUCCESS, DELETE_ROOM, GET_CURR_ROOM_INFO, GET_ROOM_LIST, SET_CURR_ROOM, UPDATE_ROOM } from './constants';\r\n\r\nimport {\r\n    getRoomListSuccess,\r\n    getRoomListFailed,\r\n    createRoomSuccess,\r\n    createRoomFailed,\r\n    updateRoomFailed,\r\n    updateRoomSuccess,\r\n    deleteRoomSuccess,\r\n    deleteRoomFailed,\r\n    getCurrentRoomInfoSuccess,\r\n    getCurrentRoomInfoFailed\r\n\r\n} from './actions';\r\n\r\n\r\nfunction* getRoomList({payload:{user}}){\r\n    try{\r\n        const response = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url: 'api/room/access/all'\r\n        });\r\n        if (response.status==\"success\"){\r\n            yield put(getRoomListSuccess(response.result.accesses));\r\n        } else {\r\n            yield put(getRoomListFailed(response.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getRoomListFailed(error));\r\n    }\r\n}\r\n\r\nfunction* getRoomInfo({payload:{user,room_id}}){\r\n    try{\r\n        const response = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url: 'api/room/',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (response.status==\"success\"){\r\n            yield put(getCurrentRoomInfoSuccess(response.result.room));\r\n        } else {\r\n            yield put(getCurrentRoomInfoFailed(response.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getCurrentRoomInfoFailed(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* newRoom({ payload: {user,room} }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n         },\r\n        data:room,\r\n        url : 'api/room/create'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(createRoomSuccess(response.result.room));\r\n        } else {\r\n            yield put(createRoomFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(createRoomFailed(error));\r\n    }\r\n}\r\n\r\nfunction* updateRoom({ payload: {user,room_id,room_info} }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n         },\r\n        data:{room_id: room_id,...room_info},\r\n        url : 'api/room/edit'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(updateRoomSuccess(response.result.room));\r\n        } else {\r\n            yield put(updateRoomFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(updateRoomFailed(error));\r\n    }\r\n}\r\nfunction* deleteRoom({ payload: {user,room_id} }) {\r\n    const options = {\r\n        method: 'delete',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n         },\r\n        data:{room_id},\r\n        url : 'api/room/'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(deleteRoomSuccess(room_id));\r\n        } else {\r\n            yield put(deleteRoomFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(deleteRoomFailed(error));\r\n    }\r\n}\r\n\r\n\r\nfunction * watchGetRoomList(){\r\n    yield takeEvery(GET_ROOM_LIST, getRoomList);\r\n}\r\n\r\nfunction * watchGetCurrentRoomInfo(){\r\n    yield takeEvery(GET_CURR_ROOM_INFO, getRoomInfo);\r\n}\r\n\r\nfunction * watchCreateRoom(){\r\n    yield takeEvery(CREATE_ROOM, newRoom);\r\n}\r\nfunction * watchUpdateRoom(){\r\n    yield takeEvery(UPDATE_ROOM, updateRoom);\r\n}\r\nfunction * watchDeleteRooms(){\r\n    yield takeEvery(DELETE_ROOM, deleteRoom);\r\n}\r\n\r\nfunction* RoomListSaga(){\r\n    yield all([\r\n        fork(watchGetRoomList),\r\n        fork(watchCreateRoom),\r\n        fork(watchUpdateRoom),\r\n        fork(watchDeleteRooms),\r\n        fork(watchGetCurrentRoomInfo),\r\n    ])\r\n}\r\n\r\nexport default RoomListSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\nimport {requestApi} from 'helpers/api';\r\nimport {\r\n    GET_NOTIFICATION_LIST,\r\n    DELETE_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION,\r\n} from './constants';\r\n\r\nimport {\r\n    getNotificationListSuccess,\r\n    getNotificationListFailed,\r\n    deleteNotificationSuccess,\r\n    deleteNotificationFailed,\r\n    deleteAllNotificationSuccess,\r\n    deleteAllNotificationFailed,\r\n} from './actions';\r\n\r\nfunction * getNotificationList({payload: {user}}){\r\n    const res = yield call (requestApi,{\r\n        method: 'get',\r\n        headers: {\r\n            'x-access-token': user.accessToken\r\n        },\r\n        url: 'api/notification/all'\r\n    });\r\n    if (res.status === 'success'){\r\n        yield put(getNotificationListSuccess(res.result.notifications));\r\n    } else {\r\n        yield put(getNotificationListFailed(res.result));\r\n    }\r\n}\r\n\r\nfunction * deleteNotification({payload: {user,notification_id}}){\r\n\r\n    const res = yield call (requestApi,{\r\n        method: 'delete',\r\n        headers: {\r\n            'x-access-token':user.accessToken\r\n        },\r\n        url: 'api/notification',\r\n        params: {\r\n            notification_id\r\n        }\r\n    })\r\n    if (res.status === 'success'){\r\n        yield put(deleteNotificationSuccess(notification_id));\r\n    } else {\r\n        yield put(deleteNotificationFailed(res.result));\r\n    }\r\n}\r\n\r\nfunction * deleteAllNotification({payload: {user}}){\r\n    const res = yield call (requestApi,{\r\n        method: 'delete',\r\n        headers: {\r\n            'x-access-token': user.accessToken\r\n        },\r\n        url: 'api/notification/all'\r\n    })\r\n    if (res.status === 'success'){\r\n       yield  put(deleteAllNotificationSuccess(res.result));\r\n    } else {\r\n        yield put(deleteAllNotificationFailed(res.result));\r\n    }\r\n}\r\n\r\nfunction * watchGetNotification(){\r\n    yield takeEvery(GET_NOTIFICATION_LIST, getNotificationList)\r\n}\r\nfunction * watchDeleteNotification(){\r\n    yield takeEvery(DELETE_NOTIFICATION, deleteNotification)\r\n}\r\nfunction * watchDeleteAllNotification(){\r\n    yield takeEvery(DELETE_ALL_NOTIFICATION, deleteAllNotification)\r\n}\r\n\r\nfunction * Notification(){\r\n    yield all([\r\n        fork(watchGetNotification),\r\n        fork(watchDeleteNotification),\r\n        fork(watchDeleteAllNotification),\r\n    ])\r\n}\r\n\r\nexport default Notification;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    GET_AREA_DATA,\r\n    GET_CUBE_DATA,\r\n    GET_CURRENT_DATA,\r\n    GET_SENSOR_DATA,\r\n} from './constants';\r\n\r\nimport {\r\n    getAreaDataSuccess,\r\n    getAreaDataFailed,\r\n    getCurrentDataSuccess,\r\n    getCurrentDataFailed,\r\n    getSensorDataSuccess,\r\n    getSensorDataFailed,\r\n    getCubeDataSuccess,\r\n    getCubeDataFailed,\r\n} from './actions';\r\n\r\nimport {requestApi} from 'helpers/api'\r\n\r\nfunction* getAreaData({payload: {user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/area',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getAreaDataSuccess(res.result))\r\n        } else {\r\n            yield put(getAreaDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getAreaDataFailed(error))\r\n    }\r\n}\r\n\r\nfunction* getCurrentData({payload:{user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/current',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getCurrentDataSuccess(res.result))\r\n        } else {\r\n            yield put(getCurrentDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getCurrentDataFailed(error))\r\n    }\r\n}\r\nfunction* getSensorData({payload: {user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/sensor',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getSensorDataSuccess(res.result))\r\n        } else {\r\n            yield put(getSensorDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getSensorDataFailed(error))\r\n    }\r\n}\r\n\r\nfunction* getCubeData({payload: {user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/getCubeData',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getCubeDataSuccess(res.result))\r\n        } else {\r\n            yield put(getCubeDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getCubeDataFailed(error))\r\n    }\r\n}\r\n\r\n\r\nfunction * watchGetAreaData(){\r\n    yield takeEvery(GET_AREA_DATA, getAreaData);\r\n}\r\n\r\nfunction * watchGetCurrentData(){\r\n    yield takeEvery(GET_CURRENT_DATA, getCurrentData);\r\n}\r\n\r\nfunction * watchGetSensorData(){\r\n    yield takeEvery(GET_SENSOR_DATA, getSensorData);\r\n}\r\n\r\nfunction * watchGetCubeData(){\r\n    yield takeEvery(GET_CUBE_DATA, getCubeData);\r\n}\r\n\r\nfunction* RoomDataSaga(){\r\n    yield all([\r\n        fork(watchGetAreaData),\r\n        fork(watchGetCurrentData),\r\n        fork(watchGetSensorData),\r\n        fork(watchGetCubeData),\r\n    ])\r\n}\r\n\r\nexport default RoomDataSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    ADD_SENSOR,\r\n    GET_CURR_ROOM_SENSOR_MAP,\r\n    UPDATE_SENSOR,\r\n    DELETE_SENSOR\r\n} from './constants';\r\n\r\nimport { addSensorFailed, addSensorSuccess, deleteSensorFailed, deleteSensorSuccess, getRoomStructureFailed, getRoomStructureSuccess, updateSensorFailed, updateSensorSuccess } from './actions';\r\n\r\nimport {requestApi} from 'helpers/api';\r\n\r\n\r\nfunction * getCurrentRoomSensorMap({payload: {room_id, user}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/',\r\n            params:{room_id}\r\n        });\r\n        if (res.status==='success'){\r\n            yield put(getRoomStructureSuccess(res.result.structure));\r\n        } else {\r\n            yield put(getRoomStructureFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getRoomStructureFailed(error))\r\n    }\r\n}\r\n\r\nfunction * updateSensor({payload: {user,room_id,sensor_id,location}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/sensor/edit',\r\n            data:{room_id,sensor_id,location:location}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(updateSensorSuccess(res.result.structure));\r\n        } else {\r\n            yield put(updateSensorFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(updateSensorFailed(error))\r\n    }\r\n}\r\n\r\nfunction * addSensor({payload: {user,room_id,sensor_id,location}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/sensor/add',\r\n            data:{room_id,sensor_id,location:location}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(addSensorSuccess(res.result.structure));\r\n        } else {\r\n            yield put(addSensorFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(addSensorFailed(error))\r\n    }\r\n}\r\n\r\nfunction * deleteSensor({payload: {user,room_id,sensor_id}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/sensor/delete',\r\n            data:{room_id,sensor_id}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(deleteSensorSuccess(res.result.structure));\r\n        } else {\r\n            yield put(deleteSensorFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(deleteSensorFailed(error))\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction * watchGetCurrentRoomSensorMap(){\r\n    yield takeEvery(GET_CURR_ROOM_SENSOR_MAP, getCurrentRoomSensorMap);\r\n}\r\n\r\nfunction * watchUpdateSensor(){\r\n    yield takeEvery(UPDATE_SENSOR, updateSensor);\r\n}\r\n\r\nfunction * watchAddeSensor(){\r\n    yield takeEvery(ADD_SENSOR, addSensor);\r\n}\r\n\r\nfunction * watchDeleteSensor(){\r\n    yield takeEvery(DELETE_SENSOR, deleteSensor);\r\n}\r\n\r\nfunction* roomStructrureSaga(){\r\n    yield all([\r\n\r\n        fork(watchGetCurrentRoomSensorMap),\r\n        fork(watchUpdateSensor),\r\n        fork(watchAddeSensor),\r\n        fork(watchDeleteSensor),\r\n       \r\n    ])\r\n}\r\n\r\nexport default roomStructrureSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport { ADD_ACCESS, DELETE_ACCESS, GET_USER_ACCESS, REPLY_ACCESS, UPDATE_ACCESS } from './constants';\r\n\r\nimport { AddAccessFailed, AddAccessSuccess, deleteAccessFailed, deleteAccessSuccess, getUserAccessFailed, getUserAccessSuccess, replyAccessFailed, replyAccessSuccess, updateAccessFailed, updateAccessSuccess } from './actions';\r\n\r\nimport {requestApi} from 'helpers/api';\r\n\r\n\r\nfunction * getUserAccessApi ({payload: {user,room_id}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/access/',\r\n            params:{user,room_id}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(getUserAccessSuccess(res.result.accesses));\r\n        } else {\r\n            yield put(getUserAccessFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getUserAccessFailed(error))\r\n    }\r\n}\r\n\r\nfunction * addAccessApi ({payload: {user,room_id,user_id,role}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/access/add',\r\n            data:{room_id,user_id,role}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(AddAccessSuccess(res.result.access));\r\n        } else {\r\n            yield put(AddAccessFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(AddAccessFailed(error))\r\n    }\r\n}\r\n\r\nfunction * updateAccessApi ({payload: {user,room_id,access_id,role}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/access/edit',\r\n            data:{room_id,access_id,role}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(updateAccessSuccess(res.result.access));\r\n        } else {\r\n            yield put(updateAccessFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(updateAccessFailed(error))\r\n    }\r\n}\r\n\r\n\r\nfunction * replyAccessApi ({payload: {user,access_id,accepted}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/access/reply',\r\n            data:{access_id,accepted}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(replyAccessSuccess(res.result.access));\r\n        } else {\r\n            yield put(replyAccessFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(replyAccessFailed(error))\r\n\r\n    }\r\n}\r\n\r\nfunction * deleteAccessApi ({payload: {user,room_id,access_id}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'delete',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/access/',\r\n            data:{room_id,access_id}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(deleteAccessSuccess(access_id));\r\n        } else {\r\n            yield put(deleteAccessFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(deleteAccessFailed(error))\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction * watchGetUserAccess(){\r\n    yield takeEvery(GET_USER_ACCESS, getUserAccessApi);\r\n}\r\nfunction * watchAddAccess(){\r\n    yield takeEvery(ADD_ACCESS, addAccessApi);\r\n}\r\n\r\nfunction * watchUpdateAccess(){\r\n    yield takeEvery(UPDATE_ACCESS, updateAccessApi);\r\n}\r\nfunction * watchReplyAccess(){\r\n    yield takeEvery(REPLY_ACCESS, replyAccessApi);\r\n}\r\n\r\nfunction * watchDeleteAccess(){\r\n    yield takeEvery(DELETE_ACCESS, deleteAccessApi);\r\n}\r\n\r\nfunction* roomAccessSaga(){\r\n    yield all([\r\n        fork(watchGetUserAccess),\r\n        fork(watchUpdateAccess),\r\n        fork(watchAddAccess),\r\n        fork(watchReplyAccess),\r\n        fork(watchDeleteAccess),\r\n    ])\r\n}\r\n\r\nexport default roomAccessSaga;","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\n\r\nimport roomListSaga from './roomList/saga'\r\nimport notificationListSaga from './notification/saga'\r\nimport roomDataSaga from './roomData/saga'\r\nimport roomStructrureSaga from './roomStructrure/saga'\r\nimport roomAccessSaga from './roomAccess/saga';\r\n\r\nexport default function* rootSaga(getState) {\r\n    yield all([\r\n        authSaga(),\r\n        layoutSaga(),\r\n        appMenuSaga(),\r\n        roomListSaga(),\r\n        notificationListSaga(),\r\n        roomDataSaga(),\r\n        roomStructrureSaga(),\r\n        roomAccessSaga(),\r\n    ]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ToastProvider} from 'react-toast-notifications'\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <ToastProvider placement ='bottom-right' autoDismissTimeout={5000}>\r\n            <App />\r\n        </ToastProvider> \r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","export const GET_CURR_ROOM_SENSOR_MAP = \"GET_CURR_ROOM_SENSOR_MAP\";\r\nexport const GET_CURR_ROOM_SENSOR_MAP_SUCCESS = \"GET_CURR_ROOM_SENSOR_MAP_SUCCESS\";\r\nexport const GET_CURR_ROOM_SENSOR_MAP_FAILED = \"GET_CURR_ROOM_SENSOR_MAP_FAILED\";\r\n\r\nexport const ADD_SENSOR = \"ADD_SENSOR\";\r\nexport const ADD_SENSOR_SUCCESS = \"ADD_SENSOR_SUCCESS\";\r\nexport const ADD_SENSOR_FAILED = \"ADD_SENSOR_FAILED\";\r\n\r\nexport const UPDATE_SENSOR = \"UPDATE_SENSOR\";\r\nexport const UPDATE_SENSOR_SUCCESS = \"UPDATE_SENSOR_SUCCESS\";\r\nexport const UPDATE_SENSOR_FAILED = \"UPDATE_SENSOR_FAILED\";\r\n\r\nexport const DELETE_SENSOR = \"DELETE_SENSOR\";\r\nexport const DELETE_SENSOR_SUCCESS = \"DELETE_SENSOR_SUCCESS\";\r\nexport const DELETE_SENSOR_FAILED = \"DELETE_SENSOR_FAILED\";","export const GET_NOTIFICATION_LIST = 'GET_NOTIFICATION_LIST';\r\nexport const GET_NOTIFICATION_LIST_SUCCESS = 'GET_NOTIFICATION_LIST_SUCCESS';\r\nexport const GET_NOTIFICATION_LIST_FAILED = 'GET_NOTIFICATION_LIST_FAILED';\r\n\r\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\r\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATION_SUCCESS';\r\nexport const DELETE_NOTIFICATION_FAILED = 'DELETE_NOTIFICATION_FAILED';\r\n\r\nexport const DELETE_ALL_NOTIFICATION = 'DELETE_ALL_NOTIFICATION';\r\nexport const DELETE_ALL_NOTIFICATION_SUCCESS = 'DELETE_ALL_NOTIFICATION_SUCCESS';\r\nexport const DELETE_ALL_NOTIFICATION_FAILED = 'DELETE_ALL_NOTIFICATION_FAILED';\r\n\r\nexport const UPDATE_NOTIFICATION = \"UPDATE_NOTIFICATION\";\r\nexport const PUSH_NOTIFICATION = \"PUSH_NOTIFICATION\";","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","import {\r\n    GET_ROOM_LIST,\r\n    GET_ROOM_LIST_SUCCESS,\r\n    GET_ROOM_LIST_FAILED,\r\n\r\n    SET_CURR_ROOM,\r\n\r\n   GET_CURR_ROOM_INFO,\r\n   GET_CURR_ROOM_INFO_SUCCESS,\r\n   GET_CURR_ROOM_INFO_FAILED,\r\n\r\n\r\n    CREATE_ROOM,\r\n    CREATE_ROOM_SUCCESS,\r\n    CREATE_ROOM_FAILED,\r\n\r\n    UPDATE_ROOM,\r\n    UPDATE_ROOM_SUCCESS,\r\n    UPDATE_ROOM_FAILED,\r\n\r\n    DELETE_ROOM,\r\n    DELETE_ROOM_SUCCESS,\r\n    DELETE_ROOM_FAILED,\r\n} from './constants';\r\n\r\nexport const getRoomList = (user) => ({\r\n    type: GET_ROOM_LIST,\r\n    payload: {user}\r\n})\r\n\r\nexport const getRoomListSuccess = (accesses) => ({\r\n    type: GET_ROOM_LIST_SUCCESS,\r\n    payload: {accesses}\r\n})\r\n\r\nexport const getRoomListFailed = (error) => ({\r\n    type: GET_ROOM_LIST_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\n\r\nexport const getCurrentRoomInfo = (user,room_id) => ({\r\n    type: GET_CURR_ROOM_INFO,\r\n    payload: {user,room_id}\r\n})\r\nexport const getCurrentRoomInfoSuccess = (room) => ({\r\n    type: GET_CURR_ROOM_INFO_SUCCESS,\r\n    payload: {room}\r\n})\r\nexport const getCurrentRoomInfoFailed  = (error) => ({\r\n    type: GET_CURR_ROOM_INFO_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const setCurrentRoom = (room) => ({\r\n    type: SET_CURR_ROOM,\r\n    payload: {room}\r\n})\r\n\r\nexport const createRoom = (user,room) => ({\r\n    type: CREATE_ROOM,\r\n    payload: {user,room}\r\n})\r\nexport const createRoomSuccess = (room) => ({\r\n    type: CREATE_ROOM_SUCCESS,\r\n    payload: {room}\r\n})\r\nexport const createRoomFailed = (error) => ({\r\n    type: CREATE_ROOM_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const updateRoom = (user,room_id,room_info) => ({\r\n    type: UPDATE_ROOM,\r\n    payload: {user,room_id,room_info}\r\n})\r\nexport const updateRoomSuccess = (room) => ({\r\n    type: UPDATE_ROOM_SUCCESS,\r\n    payload: {room}\r\n})\r\nexport const updateRoomFailed = (error) => ({\r\n    type: UPDATE_ROOM_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const deleteRoom = (user,room_id) => ({\r\n    type: DELETE_ROOM,\r\n    payload: {user,room_id}\r\n})\r\nexport const deleteRoomSuccess = (room_id) => ({\r\n    type: DELETE_ROOM_SUCCESS,\r\n    payload: {room_id}\r\n})\r\nexport const deleteRoomFailed = (error) => ({\r\n    type: DELETE_ROOM_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n","import {\r\n    GET_USER_ACCESS,\r\n    GET_USER_ACCESS_SUCCESS,\r\n\r\n    ADD_ACCESS,\r\n    ADD_ACCESS_SUCCESS,\r\n    ADD_ACCESS_FAILED,\r\n\r\n    UPDATE_ACCESS,\r\n    UPDATE_ACCESS_SUCCESS,\r\n    UPDATE_ACCESS_FAILED,\r\n\r\n    REPLY_ACCESS,\r\n    REPLY_ACCESS_SUCCESS,\r\n    REPLY_ACCESS_FAILED,\r\n\r\n    DELETE_ACCESS,\r\n    DELETE_ACCESS_SUCCESS,\r\n    DELETE_ACCESS_FAILED,\r\n    GET_USER_ACCESS_FAILED,\r\n} from './constants';\r\n\r\nexport const getUserAccess = (user,room_id) => ({\r\n    type: GET_USER_ACCESS,\r\n    payload: {\r\n        user,\r\n        room_id\r\n    }\r\n})\r\nexport const getUserAccessSuccess = (accesses) => ({\r\n    type: GET_USER_ACCESS_SUCCESS,\r\n    payload: {accesses}\r\n})\r\n\r\nexport const getUserAccessFailed = (error) => ({\r\n    type: GET_USER_ACCESS_FAILED,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const AddAccess = (user,room_id,user_id,role) => ({\r\n    type: ADD_ACCESS,\r\n    payload: {\r\n        user,room_id,user_id,role\r\n    }\r\n})\r\nexport const AddAccessSuccess = (access) => ({\r\n    type: ADD_ACCESS_SUCCESS,\r\n    payload: {access}\r\n})\r\n\r\nexport const AddAccessFailed = (error) => ({\r\n    type: ADD_ACCESS_FAILED,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const updateAccess = (user,room_id,access_id,role) => ({\r\n    type: UPDATE_ACCESS,\r\n    payload: {\r\n        user,room_id,access_id,role\r\n    }\r\n})\r\nexport const updateAccessSuccess = (access) => ({\r\n    type: UPDATE_ACCESS_SUCCESS,\r\n    payload: {access}\r\n})\r\n\r\nexport const updateAccessFailed = (error) => ({\r\n    type: UPDATE_ACCESS_FAILED,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const replyAccess = (user,access_id,accepted) => ({\r\n    type: REPLY_ACCESS,\r\n    payload: {\r\n        user,access_id,accepted\r\n    }\r\n})\r\nexport const replyAccessSuccess = (access) => ({\r\n    type: REPLY_ACCESS_SUCCESS,\r\n    payload: {access}\r\n})\r\n\r\nexport const replyAccessFailed = (error) => ({\r\n    type: REPLY_ACCESS_FAILED,\r\n    payload: error\r\n})\r\n\r\nexport const deleteAccess = (user,room_id,access_id) => ({\r\n    type: DELETE_ACCESS,\r\n    payload: {\r\n        user,room_id,access_id\r\n    }\r\n})\r\nexport const deleteAccessSuccess = (result) => ({\r\n    type: DELETE_ACCESS_SUCCESS,\r\n    payload: {result}\r\n})\r\n\r\nexport const deleteAccessFailed = (error) => ({\r\n    type: DELETE_ACCESS_FAILED,\r\n    payload: error\r\n})","import {\r\n    GET_AREA_DATA,\r\n    GET_AREA_DATA_SUCCESS,\r\n    GET_AREA_DATA_FAILED,\r\n\r\n    GET_CURRENT_DATA,\r\n    GET_CURRENT_DATA_SUCCESS,\r\n    GET_CURRENT_DATA_FAILED,\r\n\r\n    GET_SENSOR_DATA,\r\n    GET_SENSOR_DATA_SUCCESS,\r\n    GET_SENSOR_DATA_FAILED,\r\n\r\n    GET_CUBE_DATA,\r\n    GET_CUBE_DATA_SUCCESS,\r\n    GET_CUBE_DATA_FAILED,\r\n} from './constants';\r\n\r\nexport const getAreaData = (user,room_id) => ({\r\n    type: GET_AREA_DATA,\r\n    payload: {\r\n        room_id,\r\n        user,\r\n    }\r\n})\r\n\r\nexport const getAreaDataSuccess = (data) => ({\r\n    type: GET_AREA_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getAreaDataFailed = (error) => ({\r\n    type: GET_AREA_DATA_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const getCurrentData = (user,room_id) => ({\r\n    type: GET_CURRENT_DATA,\r\n    payload: {\r\n        room_id,\r\n        user\r\n    }\r\n})\r\n\r\nexport const getCurrentDataSuccess = (data) => ({\r\n    type: GET_CURRENT_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getCurrentDataFailed = (error) => ({\r\n    type: GET_CURRENT_DATA_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const getSensorData = (user,room_id) => ({\r\n    type: GET_SENSOR_DATA,\r\n    payload: {\r\n        room_id,\r\n        user\r\n    }\r\n})\r\n\r\nexport const getSensorDataSuccess = (data) => ({\r\n    type: GET_SENSOR_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getSensorDataFailed = (error) => ({\r\n    type: GET_SENSOR_DATA_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const getCubeData = (user,room_id) => ({\r\n    type: GET_CUBE_DATA,\r\n    payload: {\r\n        room_id,\r\n        user\r\n    }\r\n})\r\nexport const getCubeDataSuccess = (data) => ({\r\n    type: GET_CUBE_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getCubeDataFailed = (error) => ({\r\n    type: GET_CUBE_DATA_FAILED,\r\n    payload: {error}\r\n})","import { GET_CURR_ROOM_INFO_FAILED } from 'redux/roomList/constants';\r\nimport {\r\n    GET_CURR_ROOM_SENSOR_MAP,\r\n    GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n    GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n\r\n    ADD_SENSOR,\r\n    ADD_SENSOR_SUCCESS,\r\n    ADD_SENSOR_FAILED,\r\n\r\n    UPDATE_SENSOR,\r\n    UPDATE_SENSOR_SUCCESS,\r\n    UPDATE_SENSOR_FAILED,\r\n\r\n    DELETE_SENSOR,\r\n    DELETE_SENSOR_SUCCESS,\r\n    DELETE_SENSOR_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const getRoomStructure = (user,room_id) => ({\r\n    type: GET_CURR_ROOM_SENSOR_MAP,\r\n    payload: {\r\n        user,\r\n        room_id,\r\n    }\r\n})\r\nexport const getRoomStructureSuccess = (data) => ({\r\n    type: GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getRoomStructureFailed = (error) => ({\r\n    type: GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const addSensor = (user,room_id,sensor_id,location) => ({\r\n    type: ADD_SENSOR,\r\n    payload: {\r\n        user,room_id,sensor_id,location\r\n    }\r\n})\r\nexport const addSensorSuccess = (data) => ({\r\n    type: ADD_SENSOR_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const addSensorFailed = (error) => ({\r\n    type: ADD_SENSOR_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const deleteSensor = (user,room_id,sensor_id) => ({\r\n    type: DELETE_SENSOR,\r\n    payload: {\r\n        user,room_id,sensor_id\r\n    }\r\n})\r\nexport const deleteSensorSuccess = (data) => ({\r\n    type: DELETE_SENSOR_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const deleteSensorFailed = (error) => ({\r\n    type: DELETE_SENSOR_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const updateSensor = (user,room_id,sensor_id,location) => ({\r\n    type: UPDATE_SENSOR,\r\n    payload: {\r\n        user,room_id,sensor_id,location\r\n    }\r\n})\r\nexport const updateSensorSuccess = (data) => ({\r\n    type: UPDATE_SENSOR_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const updateSensorFailed = (error) => ({\r\n    type: UPDATE_SENSOR_FAILED,\r\n    payload: {error}\r\n})\r\n","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (username, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { username, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (email,username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: {email,username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","import {\r\n    GET_NOTIFICATION_LIST,\r\n    GET_NOTIFICATION_LIST_SUCCESS,\r\n    GET_NOTIFICATION_LIST_FAILED,\r\n\r\n    DELETE_NOTIFICATION,\r\n    DELETE_NOTIFICATION_SUCCESS,\r\n    DELETE_NOTIFICATION_FAILED,\r\n\r\n    DELETE_ALL_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    DELETE_ALL_NOTIFICATION_FAILED,\r\n    \r\n    UPDATE_NOTIFICATION,\r\n    PUSH_NOTIFICATION\r\n} from './constants';\r\n\r\n\r\nexport const getNotificationList = (user) => ({\r\n    type: GET_NOTIFICATION_LIST,\r\n    payload: {user},\r\n});\r\nexport const getNotificationListSuccess = (list) => ({\r\n    type: GET_NOTIFICATION_LIST_SUCCESS,\r\n    payload: {\r\n        list\r\n    },\r\n});\r\nexport const getNotificationListFailed = (error) => ({\r\n    type: GET_NOTIFICATION_LIST_FAILED,\r\n    payload: {\r\n        error\r\n    },\r\n});\r\n\r\n\r\nexport const deleteNotification = (user,notification_id) => ({\r\n    type: DELETE_NOTIFICATION,\r\n    payload: {\r\n        user,\r\n        notification_id\r\n    },\r\n});\r\nexport const deleteNotificationSuccess = (notification_id) => ({\r\n    type: DELETE_NOTIFICATION_SUCCESS,\r\n    payload: {\r\n        notification_id\r\n    },\r\n});\r\nexport const deleteNotificationFailed = (error) => ({\r\n    type: DELETE_NOTIFICATION_FAILED,\r\n    payload: {\r\n        error\r\n    },\r\n});\r\n\r\n\r\nexport const deleteAllNotification = (user) => ({\r\n    type: DELETE_ALL_NOTIFICATION,\r\n    payload: {user},\r\n});\r\n\r\nexport const deleteAllNotificationSuccess = (result) => ({\r\n    type: DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    payload: {\r\n        result\r\n    },\r\n});\r\nexport const deleteAllNotificationFailed = (error) => ({\r\n    type: DELETE_ALL_NOTIFICATION_FAILED,\r\n    payload: {\r\n        error\r\n    },\r\n});\r\n\r\n\r\nexport const updateNotification = (id, data) => ({\r\n    type: UPDATE_NOTIFICATION,\r\n    payload: {\r\n        id,\r\n        data\r\n    }\r\n});\r\nexport const pushNotification = (notification) => ({\r\n    type: PUSH_NOTIFICATION,\r\n    payload: {\r\n        notification\r\n    },\r\n});","import { Cookies } from 'react-cookie';\r\nconst setRoomCookieDefault = (room) => {\r\n    let cookies = new Cookies();\r\n    if (room) {\r\n        cookies.set('currentRoom', JSON.stringify(room), { path: '/' });\r\n    } else {\r\n        cookies.remove('currentRoom', { path: '/' });\r\n    }\r\n};\r\nconst getRoomCookieDefault = ()=>{\r\n    const cookies = new Cookies();\r\n    const room = cookies.get('currentRoom');\r\n    let roomDefault= room ? (typeof room == 'object' ? room : JSON.parse(room)) : null;\r\n    return roomDefault;\r\n}\r\nexport { setRoomCookieDefault, getRoomCookieDefault };","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\nimport {requestApi} from './api';\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(user.accessToken);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    let newUser= user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n    return newUser;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","export const GET_ROOM_LIST = \"GET_ROOM_LIST\";\r\nexport const GET_ROOM_LIST_SUCCESS = \"GET_ROOM_LIST_SUCCESS\";\r\nexport const GET_ROOM_LIST_FAILED = \"GET_ROOM_LIST_FAILED\";\r\n\r\nexport const GET_CURR_ROOM_INFO = \"GET_ROOM_INFO\";\r\nexport const GET_CURR_ROOM_INFO_SUCCESS = \"GET_ROOM_INFO_SUCCESS\";\r\nexport const GET_CURR_ROOM_INFO_FAILED = \"GET_ROOM_INFO_FAILED\";\r\n\r\nexport const SET_CURR_ROOM = \"SET_CURR_ROOM\";\r\n\r\nexport const CREATE_ROOM = \"CREATE_ROOM\";\r\nexport const CREATE_ROOM_SUCCESS = \"CREATE_ROOM_SUCCESS\";\r\nexport const CREATE_ROOM_FAILED = \"CREATE_ROOM_FAILED\";\r\n\r\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\r\nexport const UPDATE_ROOM_SUCCESS = \"UPDATE_ROOM_SUCCESS\";\r\nexport const UPDATE_ROOM_FAILED = \"UPDATE_ROOM_FAILED\";\r\n\r\nexport const DELETE_ROOM = \"DELETE_ROOM\";\r\nexport const DELETE_ROOM_SUCCESS = \"DELETE_ROOM_SUCCESS\";\r\nexport const DELETE_ROOM_FAILED = \"DELETE_ROOM_FAILED\";\r\n\r\n","export const BASE_URL = \"http://vikhan.herokuapp.com/\"\r\nexport const BASE_URL2 = \"http://localhost:8080/\"\r\n","export const GET_USER_ACCESS = \"GET_USER_ACCESS\";\r\nexport const GET_USER_ACCESS_SUCCESS = \"GET_USER_ACCESS_SUCCESS\";\r\nexport const GET_USER_ACCESS_FAILED = \"GET_USER_ACCESS_FAILED\";\r\n\r\nexport const ADD_ACCESS = \"ADD_ACCESS\";\r\nexport const ADD_ACCESS_SUCCESS = \"ADD_ACCESS_SUCCESS\";\r\nexport const ADD_ACCESS_FAILED = \"ADD_ACCESS_FAILED\";\r\n\r\nexport const UPDATE_ACCESS = \"UPDATE_ACCESS\";\r\nexport const UPDATE_ACCESS_SUCCESS = \"UPDATE_ACCESS_SUCCESS\";\r\nexport const UPDATE_ACCESS_FAILED = \"UPDATE_ACCESS_FAILED\";\r\n\r\nexport const REPLY_ACCESS = \"REPLY_ACCESS\";\r\nexport const REPLY_ACCESS_SUCCESS = \"REPLY_ACCESS_SUCCESS\";\r\nexport const REPLY_ACCESS_FAILED = \"REPLY_ACCESS_FAILED\";\r\n\r\nexport const DELETE_ACCESS = \"DELETE_ACCESS\";\r\nexport const DELETE_ACCESS_SUCCESS = \"DELETE_ACCESS_SUCCESS\";\r\nexport const DELETE_ACCESS_FAILED = \"DELETE_ACCESS_FAILED\";\r\n\r\n"],"sourceRoot":""}
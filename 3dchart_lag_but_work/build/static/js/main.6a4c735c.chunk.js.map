{"version":3,"sources":["components/SChartLite.js","App.js","serviceWorker.js","index.js"],"names":["SChart3DLite","props","state","oWorld","oFrame","oConfig","oData","oSlice","bg_color","i_lx","i_ly","i_lz","scene","THREE","background","this","camera","window","innerWidth","innerHeight","up","set","position","renderer","setSize","container","appendChild","domElement","controls","OrbitControls","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","Math","PI","axesHelper","add","addEventListener","aspect","updateProjectionMatrix","animate","requestAnimationFrame","update","render","world","setState","threeWorld","size","x","axis","level","y","z","tileSize","mid","toUpperCase","console","log","target","cube","Object3D","ii","createAFace","faceSize","order","fPi","oCurrFI","0","width","height","angle","side","1","2","3","4","5","tileGeometry","tileMaterial","vertexColors","boxMesh","rotation","setFromVector3","copy","dispose","currFace","color","aData","oMesh","iX","iY","iZ","length","dX","dY","dZ","sStatement","aFace","Array","fill","map","divide","a","b","r","d","trunc","aFlat","flat","iMin","min","apply","iMax","max","si","push","n","children","geometry","faces","ia","tempToHSL","elementsNeedUpdate","temp","ret","floor","init","setHex","forEach","child","material","remove","frame","makeFrame","updateChart","className","ref","thisDiv","Component","Config","Data","Slice","App","me","obj","setInterval","random","e","key","prompt","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a4c735c.chunk.js","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport * as THREE from 'three';\r\nimport OrbitControls from 'orbit-controls-es6';\r\nimport './SChartLite.css';\r\nimport {\r\n    Object3D\r\n} from 'three';\r\n//import Axios from 'axios';\r\n\r\nexport default class SChart3DLite extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            oWorld: null,\r\n            oFrame: null,\r\n            oConfig: null,\r\n            oData: null,\r\n            oSlice: null,\r\n            bg_color: 0xaaffaa,\r\n            i_lx: 0,\r\n            i_ly: 0,\r\n            i_lz: 0\r\n        }\r\n    }\r\n\r\n    init(){\r\n        var scene = new THREE.Scene();\r\n        scene.background = new THREE.Color(this.state.bg_color);\r\n        var camera = new THREE.PerspectiveCamera(\r\n            60,\r\n            window.innerWidth / window.innerHeight,\r\n            1,\r\n            1000\r\n        );\r\n        camera.up.set(0, 0, 1);\r\n        camera.position.set(150, 150, 150);\r\n\r\n        var renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.container.appendChild(renderer.domElement);\r\n\r\n        var controls = new OrbitControls(camera, renderer.domElement);\r\n        controls.enableDamping = true;\r\n        controls.dampingFactor = 0.05;\r\n        controls.screenSpacePanning = false;\r\n        controls.minDistance = 10;\r\n        controls.maxDistance = 100;\r\n        controls.maxPolarAngle = Math.PI;\r\n\r\n        var axesHelper = new THREE.AxesHelper(7749);\r\n        scene.add(axesHelper);\r\n\r\n        window.addEventListener('resize', function () {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight);\r\n        }, false);\r\n\r\n        var animate = function () {\r\n            requestAnimationFrame(animate);\r\n            controls.update();\r\n            renderer.render(scene, camera);\r\n        };\r\n        animate();\r\n\r\n        let world = {\r\n            scene: scene,\r\n            camera: camera,\r\n            controls: controls,\r\n            renderer: renderer\r\n        };\r\n        this.setState({oWorld: world});\r\n        return world;\r\n    }\r\n\r\n    makeFrame() {\r\n        let threeWorld = this.state.oWorld;\r\n        let size = {\r\n            x: this.state.oConfig.size.x-((this.state.oSlice.axis==='x')?this.state.oSlice.level:0),\r\n            y: this.state.oConfig.size.y-((this.state.oSlice.axis==='y')?this.state.oSlice.level:0),\r\n            z: this.state.oConfig.size.z-((this.state.oSlice.axis==='z')?this.state.oSlice.level:0),\r\n            get X() {\r\n                return this.x * this.tileSize;\r\n            },\r\n            get Y() {\r\n                    return this.y * this.tileSize;\r\n            },\r\n            get Z() {\r\n                return this.z * this.tileSize;\r\n            },\r\n            tileSize: 1,\r\n            mid: function(axis){\r\n                return size[axis.toUpperCase()]/2;\r\n            }\r\n        };\r\n        console.log(size);\r\n\r\n        //Centering oribit controls\r\n        threeWorld.controls.target.set(size.mid('x'),size.mid('y'),size.mid('z'));\r\n\r\n        let cube = new Object3D();\r\n        for (let ii = 0; ii < 6; ii++) {\r\n            cube.add(createAFace(size, ii));\r\n        }\r\n        threeWorld.scene.add(cube);\r\n        cube.size = size;\r\n\r\n        return cube;\r\n\r\n        function createAFace(faceSize, order) {\r\n            let fPi = Math.PI;\r\n            let oFaceInfo = {\r\n                0: {\r\n                    width: 'x',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(faceSize[this.width] * faceSize.tileSize / 2, 0, faceSize[this.height] * faceSize.tileSize / 2)\r\n                    },\r\n                    side: THREE.BackSide\r\n                },\r\n                1: {\r\n                    width: 'x',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(faceSize[this.width] * faceSize.tileSize / 2, faceSize.y * faceSize.tileSize, faceSize[this.height] * faceSize.tileSize / 2)\r\n                    },\r\n                    side: THREE.FrontSide\r\n                },\r\n                2: {\r\n                    width: 'y',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 3 * fPi / 2, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(0, faceSize[this.width] * faceSize.tileSize / 2, faceSize[this.height] * faceSize.tileSize / 2)\r\n                    },\r\n                    side: THREE.FrontSide\r\n                },\r\n                3: {\r\n                    width: 'y',\r\n                    height: 'z',\r\n                    angle: new THREE.Vector3(3 * fPi / 2, 3 * fPi / 2, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(faceSize.x * faceSize.tileSize, faceSize[this.width] * faceSize.tileSize / 2, faceSize[this.height] * faceSize.tileSize / 2)\r\n                    },\r\n                    side: THREE.BackSide\r\n                },\r\n                4: {\r\n                    width: 'x',\r\n                    height: 'y',\r\n                    angle: new THREE.Vector3(fPi, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(faceSize[this.width] * faceSize.tileSize / 2, faceSize[this.height] * faceSize.tileSize / 2, 0)\r\n                    },\r\n                    side: THREE.FrontSide\r\n                },\r\n                5: {\r\n                    width: 'x',\r\n                    height: 'y',\r\n                    angle: new THREE.Vector3(fPi, 0, 0),\r\n                    get position() {\r\n                        return new THREE.Vector3(faceSize[this.width] * faceSize.tileSize / 2, faceSize[this.height] * faceSize.tileSize / 2, faceSize.z * faceSize.tileSize)\r\n                    },\r\n                    side: THREE.BackSide\r\n                }\r\n            }\r\n            let oCurrFI = oFaceInfo[order];\r\n            let tileGeometry = new THREE.PlaneGeometry(\r\n                faceSize[oCurrFI.width] * faceSize.tileSize,\r\n                faceSize[oCurrFI.height] * faceSize.tileSize,\r\n                faceSize[oCurrFI.width], faceSize[oCurrFI.height]\r\n            );\r\n\r\n            let tileMaterial = new THREE.MeshBasicMaterial({\r\n                vertexColors: THREE.FaceColors,\r\n                side: oCurrFI.side\r\n            });\r\n            let boxMesh = new THREE.Mesh(tileGeometry, tileMaterial);\r\n            boxMesh.rotation.setFromVector3(oCurrFI.angle);\r\n            boxMesh.position.copy(oCurrFI.position);\r\n            tileGeometry.dispose();\r\n            tileMaterial.dispose();\r\n            return boxMesh;\r\n        }\r\n    }\r\n\r\n    updateChart() {\r\n        let currFace = null;\r\n        let color = null;\r\n        let aData = this.state.oData;\r\n        let oMesh = this.state.oFrame;\r\n        let iX = this.state.i_lx;\r\n        let iY = this.state.i_ly;\r\n        let iZ = this.state.i_lz;\r\n\r\n        if (!oMesh || \r\n            !aData ||\r\n            iX>aData[0][0].length ||\r\n            iY>aData[0].length ||\r\n            iZ>aData.length\r\n            ) {return};\r\n        let dX, dY, dZ, sStatement; // eslint-disable-next-line\r\n        let aFace = new Array(6).fill(0).map(x => new Array());\r\n        let divide = (a, b) => ({\r\n            r: a % b,\r\n            d: Math.trunc(a / b)\r\n        });\r\n\r\n        //Find lowest and greatest temperature\r\n        let aFlat = aData.flat(3);\r\n        let iMin = Math.min.apply(null, aFlat);\r\n        let iMax = Math.max.apply(null, aFlat);\r\n\r\n        for (let ii = 0; ii < iX * iY * iZ; ii++) {\r\n            dX = divide(ii, iX);\r\n            dY = divide(dX.d, iY);\r\n            dZ = divide(dY.d, iZ);\r\n            //console.log(ii, dX.r, dY.r, dZ.r);\r\n            sStatement = (dY.r === 0) * 1 + \"\" + (dY.r === iY - 1) * 1 + \"\" + (dX.r === 0) * 1 + \"\" + (dX.r === iX - 1) * 1 + \"\" + (dZ.r === 0) * 1 + \"\" + (dZ.r === iZ - 1) * 1;\r\n            for (let si = 0; si < sStatement.length; si++) {\r\n                if (sStatement[si] === '1') (aFace[si]).push(aData[dZ.r][dY.r][dX.r]);\r\n            }\r\n        }\r\n\r\n        for (let ii = 0; ii < 6; ii++) {\r\n            currFace = oMesh.children[ii].geometry.faces;\r\n            let n = currFace.length / 2;\r\n            for (let ia = 0; ia < n; ia++) {\r\n                color = tempToHSL(iMin, iMax, aFace[ii][ia]);\r\n                //console.log(iMin, iMax, aFace[ii][ia]);\r\n                currFace[ia * 2].color.set(color);\r\n                currFace[ia * 2 + 1].color.set(color);\r\n            }\r\n            oMesh.children[ii].geometry.elementsNeedUpdate = true;\r\n        }\r\n\r\n        function tempToHSL(min, max, temp) {\r\n            let ret = 240 - (temp - min) * 240 / (max - min);\r\n            ret = Math.floor(ret);\r\n            return \"hsl(\" + ret + \",100%,50%)\";\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.init();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.state.oWorld.scene.background.setHex(this.state.bg_color);\r\n        if (this.state.i_lx !== this.state.oConfig.size.x-((this.state.oSlice.axis==='x')?this.state.oSlice.level:0) || \r\n            this.state.i_ly !== this.state.oConfig.size.y-((this.state.oSlice.axis==='y')?this.state.oSlice.level:0) || \r\n            this.state.i_lz !== this.state.oConfig.size.z-((this.state.oSlice.axis==='z')?this.state.oSlice.level:0)){\r\n                this.state.oFrame && this.state.oFrame.children.forEach((child) =>{\r\n                    console.log(child);\r\n                    child.geometry.dispose();\r\n                    child.material.dispose();\r\n                    this.state.oWorld.scene.remove(child);\r\n                });\r\n                this.state.oWorld.scene.remove(this.state.oFrame);\r\n\r\n                let frame = this.makeFrame(this.state);\r\n                this.setState({\r\n                    oFrame: frame,\r\n                    i_lx: this.state.oConfig.size.x-((this.state.oSlice.axis==='x')?this.state.oSlice.level:0),\r\n                    i_ly: this.state.oConfig.size.y-((this.state.oSlice.axis==='y')?this.state.oSlice.level:0),\r\n                    i_lz: this.state.oConfig.size.z-((this.state.oSlice.axis==='z')?this.state.oSlice.level:0),\r\n                })\r\n        }\r\n        this.updateChart();\r\n    }\r\n\r\n    render() {\r\n        return ( <div> <\r\n            div className = \"chartContainer\"\r\n            ref = {\r\n                thisDiv => {\r\n                    this.container = thisDiv\r\n                }\r\n            }\r\n            /> </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport SChart3DLite from './components/SChartLite.js'\r\n\r\nlet Config =\r\n{\r\n  \"size\": {\r\n    \"x\": 50,\r\n    \"y\": 24,\r\n    \"z\": 23,\r\n\t\"tilesize\": 1\r\n  },\r\n  \"door\": {\r\n    \"show\": true,\r\n    \"direction\": \"A\"//\"4 hướng là 4 cạnh của hình chữ nhật có thể đánh dấu A B C D\"\r\n  },\r\n  \"axis-labels\": {\r\n    \"axis-x\": {\r\n      \"show\": true,\r\n      \"list\": [0, 10, 12, 19]\r\n    },\r\n    \"axis-y\": {\r\n      \"show\": true,\r\n      \"list\": [2, 3]\r\n    },\r\n    \"axis-z\": {\r\n      \"show\": true,\r\n      \"list\": [1, 2]\r\n    }\r\n  }\r\n}\r\n\r\nlet Data =\r\n[ \r\n  [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8]\r\n  ],\r\n  [\r\n    [9, 10, 11],\r\n    [12, 13, 14],\r\n    [15, 16, 17]\r\n  ],\r\n  [\r\n    [18, 19, 20],\r\n    [21, 22, 23],\r\n    [24, 25, 26]\r\n  ]\r\n]\r\n\r\nlet Slice =\r\n{\r\n    axis: \"x\",\r\n    level: 1\r\n}\r\n\r\nfunction injectState(obj){\r\n  obj.setState({\r\n    oConfig: Config,\r\n    oData: Data,\r\n    oSlice: Slice,\r\n    bg_color: 0xccccff\r\n  })\r\n  //setTimeout(()=> {clearInterval(\r\n    let tt = setInterval(()=>{\r\n      let a = new Array(50).fill(0).map(\r\n        x => new Array(50).fill(0).map(\r\n          x => new Array(50).fill(0).map(\r\n            x => Math.trunc(Math.random()*1024))));\r\n      // Config.size.x = Math.trunc(Math.random()*10+1);\r\n      // Config.size.y = Math.trunc(Math.random()*10+1);\r\n      // Config.size.z = Math.trunc(Math.random()*10+1);\r\n      obj.setState({\r\n        oData: a, \r\n        //oConfig: Config\r\n      })  \r\n      //console.log(Config.size.x);\r\n    },1000);\r\n  //)}, 5000);\r\n\r\n  window.addEventListener('keypress', (e) => {\r\n    if (e.key === 'z'){\r\n      obj.setState({\r\n        oSlice: {\r\n          axis: Slice.axis, \r\n          level: prompt(\"\")\r\n        }\r\n      });\r\n    }\r\n  })\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <div>\r\n      <SChart3DLite ref={me => injectState(me)}/>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}